
// FILE: README.md
# Firebase Studio

This is a NextJS starter in Firebase Studio.

To get started, take a look at src/app/page.tsx.

// END FILE: README.md

// ====================================================================================================

// FILE: apphosting.yaml
# Settings to manage and configure a Firebase App Hosting backend.
# https://firebase.google.com/docs/app-hosting/configure

runConfig:
  # Increase this value if you'd like to automatically spin up
  # more instances in response to increased traffic.
  maxInstances: 1

// END FILE: apphosting.yaml

// ====================================================================================================

// FILE: components.json
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "default",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "src/app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}
// END FILE: components.json

// ====================================================================================================

// FILE: next.config.ts
import type {NextConfig} from 'next';

const nextConfig: NextConfig = {
  /* config options here */
  typescript: {
    ignoreBuildErrors: true,
  },
  eslint: {
    ignoreDuringBuilds: true,
  },
  images: {
    remotePatterns: [
      {
        protocol: 'https',
        hostname: 'placehold.co',
        port: '',
        pathname: '/**',
      },
      {
        protocol: 'https',
        hostname: 'www.diocesedecolatina.org.br',
      },
      {
        protocol: 'https',
        hostname: 'upload.wikimedia.org',
      },
      {
        protocol: 'https',
        hostname: 'www.padrereginaldomanzotti.org.br',
      },
      {
        protocol: 'https',
        hostname: 's2.glbimg.com',
      },
      {
        protocol: 'https',
        hostname: 'yt3.googleusercontent.com',
      },
      {
        protocol: 'https',
        hostname: 'encrypted-tbn0.gstatic.com',
      },
      {
        protocol: 'https',
        hostname: 'thumbs2.imgbox.com',
      },
      {
        protocol: 'https',
        hostname: 'images2.imgbox.com',
      },
      {
        protocol: 'https',
        hostname: 'i.imgur.com',
        port: '',
        pathname: '/**',
      },
      {
        protocol: 'https',
        hostname: 'yt3.ggpht.com',
      },
      {
        protocol: 'https',
        hostname: 'i.pinimg.com',
      },
      {
        protocol: 'https',
        hostname: 'xn--oraaosecreta-mdb.site',
      },
      {
        protocol: 'https',
        hostname: 'classic.exame.com',
      },
      {
        protocol: 'https',
        hostname: 'static.nationalgeographicbrasil.com',
      },
    ],
  },
};

export default nextConfig;

// END FILE: next.config.ts

// ====================================================================================================

// FILE: package.json
{
  "name": "nextn",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack -p 9002",
    "genkit:dev": "genkit start -- tsx src/ai/dev.ts",
    "genkit:watch": "genkit start -- tsx --watch src/ai/dev.ts",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "typecheck": "tsc --noEmit"
  },
  "dependencies": {
    "@genkit-ai/googleai": "^1.8.0",
    "@genkit-ai/next": "^1.8.0",
    "@hookform/resolvers": "^4.1.3",
    "@radix-ui/react-accordion": "^1.2.3",
    "@radix-ui/react-alert-dialog": "^1.1.6",
    "@radix-ui/react-avatar": "^1.1.3",
    "@radix-ui/react-checkbox": "^1.1.4",
    "@radix-ui/react-dialog": "^1.1.6",
    "@radix-ui/react-dropdown-menu": "^2.1.6",
    "@radix-ui/react-label": "^2.1.2",
    "@radix-ui/react-menubar": "^1.1.6",
    "@radix-ui/react-popover": "^1.1.6",
    "@radix-ui/react-progress": "^1.1.2",
    "@radix-ui/react-radio-group": "^1.2.3",
    "@radix-ui/react-scroll-area": "^1.2.3",
    "@radix-ui/react-select": "^2.1.6",
    "@radix-ui/react-separator": "^1.1.2",
    "@radix-ui/react-slider": "^1.2.3",
    "@radix-ui/react-slot": "^1.1.2",
    "@radix-ui/react-switch": "^1.1.3",
    "@radix-ui/react-tabs": "^1.1.3",
    "@radix-ui/react-toast": "^1.2.6",
    "@radix-ui/react-tooltip": "^1.1.8",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^3.6.0",
    "dotenv": "^16.5.0",
    "firebase": "^11.9.1",
    "genkit": "^1.8.0",
    "lucide-react": "^0.475.0",
    "next": "15.3.3",
    "patch-package": "^8.0.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.54.2",
    "recharts": "^2.15.1",
    "tailwind-merge": "^3.0.1",
    "tailwindcss-animate": "^1.0.7",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "genkit-cli": "^1.8.0",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}
// END FILE: package.json

// ====================================================================================================

// FILE: src/ai/dev.ts
// Flows will be imported for their side effects in this file.

// END FILE: src/ai/dev.ts

// ====================================================================================================

// FILE: src/ai/genkit.ts
import {genkit} from 'genkit';
import {googleAI} from '@genkit-ai/googleai';

export const ai = genkit({
  plugins: [googleAI()],
  model: 'googleai/gemini-2.0-flash',
});

// END FILE: src/ai/genkit.ts

// ====================================================================================================

// FILE: src/app/arcanjomiguel/layout.tsx
import '../globals.css';

export default function ArcanjoMiguelLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return <>{children}</>;
}

// END FILE: src/app/arcanjomiguel/layout.tsx

// ====================================================================================================

// FILE: src/app/arcanjomiguel/page.tsx
import { HeroSectionArcanjoMiguel } from '@/components/landing/hero-section-arcanjomiguel';
import { VSLSectionArcanjoMiguel } from '@/components/landing/vsl-section-arcanjomiguel';
import { TestimonialsSection } from '@/components/landing/testimonials-section';
import { Footer } from '@/components/landing/footer';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import { SalesPopup } from '@/components/landing/sales-popup';
import { TopBanner } from '@/components/landing/top-banner';

export const dynamic = 'force-dynamic';

export default function ArcanjoMiguelPage() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-background text-foreground overflow-x-hidden">
      <TopBanner />
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12">
        <HeroSectionArcanjoMiguel />
        <VSLSectionArcanjoMiguel />
        <TestimonialsSection />
      </main>
      <Footer />
      <SalesPopup />
    </div>
  );
}

// END FILE: src/app/arcanjomiguel/page.tsx

// ====================================================================================================

// FILE: src/app/arcanjomiguel2/page.tsx
import { OfferSection } from '@/components/landing/offer-section';
import { TestimonialsSection } from '@/components/landing/testimonials-section';
import { Footer } from '@/components/landing/footer';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import { SalesPopup } from '@/components/landing/sales-popup';
import { TopBanner } from '@/components/landing/top-banner';
import type { Metadata } from 'next';

export const metadata: Metadata = {
  title: 'Oferta Especial - Orações Secretas',
  description: 'Descubra as orações secretas que estavam guardadas a 7 chaves no vaticano.',
};

export const dynamic = 'force-dynamic';

export default function ArcanjoMiguel2Page() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-background text-foreground overflow-x-hidden">
      <TopBanner />
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12">
        <OfferSection />
        <TestimonialsSection />
      </main>
      <Footer />
      <SalesPopup />
    </div>
  );
}

// END FILE: src/app/arcanjomiguel2/page.tsx

// ====================================================================================================

// FILE: src/app/arcanjomiguel3/page.tsx
import { OfferSection } from '@/components/landing/offer-section';
import { TestimonialsSection } from '@/components/landing/testimonials-section';
import { Footer } from '@/components/landing/footer';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import { SalesPopup } from '@/components/landing/sales-popup';
import { TopBanner } from '@/components/landing/top-banner';
import type { Metadata } from 'next';

export const metadata: Metadata = {
  title: 'Oferta Especial - Orações Secretas',
  description: 'Aproveite o desconto especial nas orações secretas.',
};

export const dynamic = 'force-dynamic';

export default function ArcanjoMiguel3Page() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-background text-foreground overflow-x-hidden">
      <TopBanner />
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12">
        <OfferSection />
        <TestimonialsSection />
      </main>
      <Footer />
      <SalesPopup />
    </div>
  );
}

// END FILE: src/app/arcanjomiguel3/page.tsx

// ====================================================================================================

// FILE: src/app/cancaonova/layout.tsx
import '../globals.css';

export default function CancaoNovaLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return <>{children}</>;
}

// END FILE: src/app/cancaonova/layout.tsx

// ====================================================================================================

// FILE: src/app/cancaonova/manuscrito/page.tsx
'use client';

import Image from 'next/image';
import { Button } from '@/components/ui/button';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import Link from 'next/link';

export default function CancaoNovaManuscritoPage() {

  return (
    <div className="dark relative flex flex-col min-h-screen bg-blue-50 text-foreground overflow-x-hidden">
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center">
        <div className="max-w-2xl w-full">
          <Image
            src="https://i.imgur.com/oU1Etag.png"
            alt="Manuscrito Sagrado"
            width={500}
            height={150}
            className="mx-auto mb-8 rounded-lg"
            data-ai-hint="sacred manuscript"
          />

          <h1 className="text-2xl md:text-3xl font-bold text-blue-600 mb-4">
            Deus envia sinais aos escolhidos. Sua Vitória está próxima...
          </h1>

          <p className="text-lg md:text-xl text-foreground/90 mb-8">
            Clique no Botão Abaixo e tenha Acesso ao Manuscrito Sagrado!
          </p>

          <Image
            src="https://i.imgur.com/Bz3hYk0.png"
            alt="Manuscrito Sagrado Preview"
            width={600}
            height={400}
            className="mx-auto mb-8 rounded-lg shadow-lg"
            data-ai-hint="sacred manuscript pages"
          />
          <Link href="/cancaonova/video">
            <Button
              size="lg"
              className="bg-blue-600 hover:bg-blue-700 text-white font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal text-center"
            >
              <span className="mr-2" role="img" aria-label="hands praying">🙌</span>
              Acessar Meu Manuscrito Sagrado
              <span className="ml-2" role="img" aria-label="hands praying">🙌</span>
            </Button>
          </Link>
        </div>
      </main>
    </div>
  );
}

// END FILE: src/app/cancaonova/manuscrito/page.tsx

// ====================================================================================================

// FILE: src/app/cancaonova/page.tsx
'use client';

import Image from 'next/image';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { BackgroundPattern } from '@/components/landing/background-pattern';

export default function CancaoNovaQuizPage() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-blue-50 text-foreground overflow-x-hidden">
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center">
        <div className="max-w-2xl w-full">
          <Image
            src="https://i.imgur.com/oU1Etag.png"
            alt="Manuscrito Sagrado"
            width={500}
            height={150}
            className="mx-auto mb-8 rounded-lg"
            data-ai-hint="sacred manuscript"
          />

          <h1 className="text-2xl md:text-4xl font-bold text-blue-600 mb-4 uppercase">
            Descubra o Manuscrito Sagrado Capaz de Transformar SUA Vida em Apenas 7 Dias...
          </h1>
          
          <p className="text-lg md:text-xl text-foreground/90 mb-8 font-bold">
            Você foi guiado(a) até aqui por um motivo divino. em poucos minutos, descubra o manuscrito sagrado que foi destinado para sua cura!
          </p>
          
          <Image
            src="https://i.imgur.com/NnpPI3u.jpeg"
            alt="Cura Divina"
            width={600}
            height={400}
            className="mx-auto mb-8 rounded-lg shadow-lg"
            data-ai-hint="divine guidance"
          />
          
          <Link href="/cancaonova/quiz">
            <Button size="lg" className="bg-blue-600 hover:bg-blue-700 text-white font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal text-center">
              Continuar
            </Button>
          </Link>
        </div>
      </main>
    </div>
  );
}

// END FILE: src/app/cancaonova/page.tsx

// ====================================================================================================

// FILE: src/app/cancaonova/quiz/page.tsx
'use client';

import { Button } from '@/components/ui/button';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import Link from 'next/link';
import Image from 'next/image';

const quizOptions = [
  { emoji: '🥺', text: 'Dor física (doenças crônicas, limitações)', link: '/cancaonova/vsl' },
  { emoji: '😩', text: 'Crise financeira (dívidas, falta de dinheiro)', link: '/cancaonova/vsl' },
  { emoji: '😔', text: 'Problemas familiares (filhos distantes, conflitos)', link: '/cancaonova/vsl' },
  { emoji: '😞', text: 'Solidão/angústia (vazio espiritual)', link: '/cancaonova/vsl' },
];

export default function CancaoNovaQuizStep2Page() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-blue-50 text-foreground overflow-x-hidden">
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center">
        <div className="max-w-2xl w-full">
          <Image
            src="https://i.imgur.com/oU1Etag.png"
            alt="Manuscrito Sagrado"
            width={500}
            height={150}
            className="mx-auto mb-8 rounded-lg"
            data-ai-hint="sacred manuscript"
          />
          <h1 className="text-2xl md:text-3xl font-bold text-blue-600 mb-8">
            Qual dessas situações mais te aflinge Atualmente?
          </h1>

          <div className="space-y-4">
            {quizOptions.map((option, index) => (
              <Link href={option.link} key={index} className="block">
                <Button
                  variant="outline"
                  size="lg"
                  className="w-full h-auto py-4 px-6 text-md md:text-lg bg-white hover:bg-blue-100 border-blue-200 whitespace-normal justify-start"
                >
                  <span className="text-2xl mr-4">{option.emoji}</span>
                  <span className="flex-1 text-left">{option.text}</span>
                </Button>
              </Link>
            ))}
          </div>
        </div>
      </main>
    </div>
  );
}

// END FILE: src/app/cancaonova/quiz/page.tsx

// ====================================================================================================

// FILE: src/app/cancaonova/video/page.tsx
'use client';

import { useEffect, useState } from 'react';
import { Button } from '@/components/ui/button';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import Image from 'next/image';

const VideoPlayer = () => {
  useEffect(() => {
    const scriptId = "vturb-player-script-6867df691dde06edc9041e7e";
    if (document.getElementById(scriptId)) return;

    const script = document.createElement("script");
    script.id = scriptId;
    script.src = "https://scripts.converteai.net/ba88e257-ee82-4efe-bc55-87bc87882ad1/players/6867df691dde06edc9041e7e/v4/player.js";
    script.async = true;
    document.head.appendChild(script);
  }, []);
  
  const videoHtml = `<vturb-smartplayer id="vid-6867df691dde06edc9041e7e" style="display: block; margin: 0 auto; width: 100%; max-width: 400px;"></vturb-smartplayer>`;

  return (
    <div 
      className="relative overflow-hidden rounded-lg shadow-2xl mx-auto w-full max-w-sm"
      dangerouslySetInnerHTML={{ __html: videoHtml }}
    />
  );
};

const TimedCheckoutButton = () => {
    const [showButton, setShowButton] = useState(false);

    useEffect(() => {
      const timer = setTimeout(() => {
        setShowButton(true);
      }, (29 * 60 + 13) * 1000); // 29 minutes and 13 seconds
  
      return () => clearTimeout(timer);
    }, []);

    const handleCheckoutClick = () => {
        window.open('https://pay.kirvano.com/bd3ab7c5-a8ac-4e1e-ba5e-150da54872a0', '_self');
    };
    
    return (
        <div className="mt-8 text-center">
            {showButton ? (
            <Button
                size="lg"
                className="bg-green-600 hover:bg-green-700 text-white font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal text-center w-full max-w-md"
                onClick={handleCheckoutClick}
                >
                EU QUERO OS MANUSCRITOS
            </Button>
            ) : (
            <div className="h-[76px] md:h-[92px]" />
            )}
        </div>
    );
};

export default function CancaoNovaVideoPage() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-blue-50 text-foreground overflow-x-hidden">
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center">
        <div className="max-w-2xl w-full">
            <Image
                src="https://i.imgur.com/oU1Etag.png"
                alt="Manuscrito Sagrado"
                width={500}
                height={150}
                className="mx-auto mb-8 rounded-lg"
                data-ai-hint="sacred manuscript"
            />
            <h1 className="text-2xl md:text-3xl font-bold text-blue-600 mb-8">
                Descubra Como Pessoas Estão<br />
                Sendo Curadas e Enriquecendo<br />
                Em Apenas 7 Dias...
            </h1>
            
            <VideoPlayer />
            
            <TimedCheckoutButton />
        </div>
      </main>
    </div>
  );
}

// END FILE: src/app/cancaonova/video/page.tsx

// ====================================================================================================

// FILE: src/app/cancaonova/vsl/page.tsx
'use client';

import Image from 'next/image';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { BackgroundPattern } from '@/components/landing/background-pattern';

export default function CancaoNovaVSLIntroPage() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-blue-50 text-foreground overflow-x-hidden">
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center">
        <div className="max-w-2xl w-full">
          <Image
            src="https://i.imgur.com/oU1Etag.png"
            alt="Manuscrito Sagrado"
            width={500}
            height={150}
            className="mx-auto mb-8 rounded-lg"
            data-ai-hint="sacred manuscript"
          />

          <p className="text-lg md:text-xl text-foreground/90 mb-4">
            Tenho certeza que ja deve estar perdendo as esperanças...
          </p>
          
          <p className="text-2xl md:text-3xl font-bold text-blue-600 mb-8">
            👇 MAS DEUS NOS DIZ: 👇
          </p>

          <Image
            src="https://i.imgur.com/YyJCqnd.jpeg" 
            alt="Jesus apontando para o céu"
            width={600}
            height={400}
            className="mx-auto mb-8 rounded-lg shadow-lg"
            data-ai-hint="Jesus pointing"
          />

          <h2 className="text-xl md:text-2xl font-bold text-foreground mb-8">
            ✝️ Você acredita que Deus tem um propósito maior para sua vida?
          </h2>

          <Link href="/cancaonova/vsl-final"> 
            <Button size="lg" className="bg-blue-600 hover:bg-blue-700 text-white font-bold text-lg md:text-xl py-4 px-8 uppercase shadow-lg h-auto whitespace-normal text-center">
              Continuar
            </Button>
          </Link>
        </div>
      </main>
    </div>
  );
}

// END FILE: src/app/cancaonova/vsl/page.tsx

// ====================================================================================================

// FILE: src/app/cancaonova/vsl-final/page.tsx
'use client';

import { Button } from '@/components/ui/button';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import Link from 'next/link';
import Image from 'next/image';

const quizOptions = [
  { emoji: '😃', text: 'Sim, algo relacionado a água/deserto', link: '/cancaonova/manuscrito' },
  { emoji: '😯', text: 'Sonhos com curas ou mensagens', link: '/cancaonova/manuscrito' },
  { emoji: '😉', text: 'Nada, mas sinto que algo está por vir', link: '/cancaonova/manuscrito' },
  { emoji: '😔', text: 'Não acredito nisso', link: '/cancaonova/manuscrito' },
];

export default function CancaoNovaVSLFinalPage() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-blue-50 text-foreground overflow-x-hidden">
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center">
        <div className="max-w-2xl w-full">
          <Image
            src="https://i.imgur.com/oU1Etag.png"
            alt="Manuscrito Sagrado"
            width={500}
            height={150}
            className="mx-auto mb-8 rounded-lg"
            data-ai-hint="sacred manuscript"
          />
          <h1 className="text-2xl md:text-3xl font-bold text-blue-600 mb-8">
            Já teve um sonho ou coincidência inexplicável recentemente?
          </h1>

          <div className="space-y-4">
            {quizOptions.map((option, index) => (
              <Link href={option.link} key={index} className="block">
                <Button
                  variant="outline"
                  size="lg"
                  className="w-full h-auto py-4 px-6 text-md md:text-lg bg-white hover:bg-blue-100 border-blue-200 whitespace-normal justify-start"
                >
                  <span className="text-2xl mr-4">{option.emoji}</span>
                  <span className="flex-1 text-left">{option.text}</span>
                </Button>
              </Link>
            ))}
          </div>
        </div>
      </main>
    </div>
  );
}

// END FILE: src/app/cancaonova/vsl-final/page.tsx

// ====================================================================================================

// FILE: src/app/desconto/page.tsx
import { OfferSection } from '@/components/landing/offer-section';
import { TestimonialsSection } from '@/components/landing/testimonials-section';
import { Footer } from '@/components/landing/footer';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import { SalesPopup } from '@/components/landing/sales-popup';
import { TopBanner } from '@/components/landing/top-banner';
import type { Metadata } from 'next';

export const metadata: Metadata = {
  title: 'Página de Desconto Especial',
  description: 'Aproveite nossa oferta especial por tempo limitado.',
};

export const dynamic = 'force-dynamic';

export default function DescontoPage() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-background text-foreground overflow-x-hidden">
      <TopBanner />
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12">
        <OfferSection />
        <TestimonialsSection />
      </main>
      <Footer />
      <SalesPopup />
    </div>
  );
}

// END FILE: src/app/desconto/page.tsx

// ====================================================================================================

// FILE: src/app/frequenciadacura/page.tsx
'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import { Menu, Search, Smile, UserCircle } from 'lucide-react';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';

type ChatMessageData = {
  name: string;
  message: string;
  isSupport?: boolean;
  avatarUrl?: string;
  avatarHint?: string;
};

const allChatMessages: ChatMessageData[] = [
  { name: 'Roberto Silva', message: 'Que Deus abençoe a todos! 🙏 Em nome de jesus', avatarUrl: 'https://thumbs2.imgbox.com/14/e9/DUPvPss9_t.jpg', avatarHint: 'man portrait' },
  { name: 'Carla Fernandes', message: 'Cheguei agora, o que tá acontecendo? Já começou?', avatarUrl: 'https://thumbs2.imgbox.com/dd/55/H0rZXQVM_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Ediene Silva', message: 'ó Jesus e Maria fortalece minha vida e a de João Batista na união vinda de vós pelo espírito santo amém' },
  { name: 'Terezinha Souza', message: 'Amém, meu Deus! Só Tu és fiel ❤️', avatarUrl: 'https://thumbs2.imgbox.com/3d/ae/bHEFsuqi_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Sueli Andrade', message: 'Nossa, entrei bem na hora da oração… Graças a Deus 😇😇' },
  { name: 'André Luiz', message: 'Deus é maravilhoso! Amém 🙌', avatarUrl: 'https://thumbs2.imgbox.com/7b/b0/gsYWvBdF_t.jpg', avatarHint: 'man portrait' },
  { name: 'Paulo César', message: 'Senhor, guia nossos passos!' },
  { name: 'Vera Lúcia', message: 'Abençoa, Senhor, cada família conectada nessa live 🙌🙌🙌' },
  { name: 'Iracema Nogueira', message: '❤️❤️❤️❤️❤️' },
  { name: 'Claudete Ferreira', message: 'Amén!! 🙏🙏🙏' },
  { name: 'Gilberto Lima', message: 'Poxa interessante uma Oração de 800 anos? Só pode ser de Deus mesmo' },
  { name: 'Regina Célia', message: 'Glória a Ti, Senhor! Estamos prontos 🙏', avatarUrl: 'https://thumbs2.imgbox.com/65/6a/L5JO7ilQ_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Marta de Jesus', message: 'Comecei a assistir agora… alguém já usou essa oração?' },
  { name: 'Eliane Ramos', message: '🙏🙏🙏' },
  { name: 'Equipe de Suporte', message: 'Sim, Marta! Milhares de pessoas já estão relatando curas, bênçãos financeiras e restauração familiar com as Frequências da Cura. 🙌📿', isSupport: true },
  { name: 'Joana Lima', message: 'Amém, glória a Deus!', avatarUrl: 'https://thumbs2.imgbox.com/87/54/0dMM6ESV_t.png', avatarHint: 'woman portrait' },
  { name: 'Neide Souza', message: 'Amém, amém, amém!!!' },
  { name: 'Paulo Vieira', message: '😇😇😇😇😇😇', avatarUrl: 'https://thumbs2.imgbox.com/48/18/9JtnHEjz_t.png', avatarHint: 'man portrait' },
  { name: 'Ana Paula', message: 'Amém 🙏 Deus é fiel' },
  { name: 'Adriana Gomes', message: 'Aleluia!!' },
  { name: 'Jacinta Feitosa', message: 'Bom dia peço oração pela minha família, minha filha, meu esposo e a mim. Principalmente pela conversão do meu esposo, livrai-nos de todos os perigos. E que o Espírito Santo esteja conosco.' },
  { name: 'Maria Rita', message: 'Aqui é a Maria Rita de Aparecida - SP. Peço oração para quitar 80 mil em dívidas de cartão de crédito e para abençoar os estudos dos netos…' },
  { name: 'Severiana Amorim', message: 'peço orações pela minha família' },
  { name: 'Cláudio Teixeira', message: 'Senhor, me ajuda a pagar meu aluguel esse mês.' },
  { name: 'Lucas Bernardes', message: 'Sou de Goiânia. Posso pedir oração pelo meu negócio?', avatarUrl: 'https://thumbs2.imgbox.com/72/dc/GT3YxWwY_t.jpg', avatarHint: 'man portrait' },
  { name: 'Marta Helena', message: 'Alguém mais sentindo uma paz diferente nesse momento?', avatarUrl: 'https://thumbs2.imgbox.com/da/67/ajSKP3eY_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Adriana Lins', message: 'Amados irmãos, vamos orar com fé 🙏' },
  { name: 'Alex Rodrigues', message: 'A minha família é uma benção...' },
  { name: 'Gerson Oliveira', message: 'Essa live vai ficar salva depois? Quero mandar pra minha mãe.' },
  { name: 'José da Silva', message: 'Sou o José da Silva de Fortaleza. peço uma bênção de um emprego para tirar a família das dificuldades e realizar o sonho da casa própria…' },
  { name: 'Henrique', message: 'Deus abençoe minha família, abre as portas de trabalho pra minha irmã Joyce.' },
  { name: 'Sérgio Lima', message: 'Esse canal é novo? Como nunca vi isso antes? Que benção🙏' },
  { name: 'Ivone Oliveira', message: 'Meu Senhor e Meu Deus,rezo hoje por todas as minhas intenções e por todos os que me pedem orações....' },
  { name: 'Tiene Delvalles', message: 'pela saúde de meus filos' },
  { name: 'Edhite Souza', message: 'Orações em ação de graças pela paz do mundo inteiro. 🙏' },
  { name: 'Rosana Oliveira', message: 'Peço orações pela cura da minha mãe que se encontra hospitalizada em estado grave🥺JESUS EU CREI MAS AUMENTA A MINHA FÉ 😭😭😭', avatarUrl: 'https://thumbs2.imgbox.com/eb/cb/zfODzSUu_t.png', avatarHint: 'woman portrait' },
  { name: 'Márcia Cardoso', message: 'Padre, sou a Márcia de BH. Peço oração pelo meu casamento e pelas minhas dores nas juntas e problemas de diabetes…' },
  { name: 'Margarida Maria', message: 'Padre peço sua benção pra minha familia pela converssão de todos.❤️' },
  { name: 'Beatriz Santos', message: 'pela cirurgia do coração da minha netinha Ária. Jesus eu confio em vós. 🙏🙏🙏🙏' },
  { name: 'Denize Michelle', message: 'Pelo meu matrimônio, meus filhos' },
  { name: 'Semirames', message: 'Rezo pela minha vida profissional, que Deus faça o melhor por mim.' },
  { name: 'Sandra', message: 'Padre, reze pra trazer meu marido de volta… ele saiu de casa faz 2 meses 😢' },
  { name: 'Carlos Eduardo', message: 'Ore pela minha mãe, Padre… ela está lutando contra um câncer e precisa de forças 🙏📿', avatarUrl: 'https://thumbs2.imgbox.com/c3/9d/Qq4PQmYc_t.jpg', avatarHint: 'man portrait' },
  { name: 'Dona Terezinha', message: 'Peço oração pela minha filha que está com depressão… que Deus cure o coração dela 🙏' },
  { name: 'Cida Ramos', message: 'Amém! Que bênção 🙏' },
  { name: 'Elis Regina', message: 'A-M-É-M 🙌' },
  { name: 'Moisés Ribeiro', message: '59 mil pessoas e todas unidas em oração… é emocionante.' },
  { name: 'Marenilde Sousa', message: 'rezo pela minha família, pelos meus filhos, pela minha vida espiritual, financeira, sentimental e física' },
  { name: 'Luciana Mendes', message: 'Só pode ser algo muito poderoso mesmo' },
  { name: 'Roberto Carvalho', message: 'Acabei de pesquisar no Google, é realmente não tem anda parecido! que interessante Gloria a Deus' },
  { name: 'Delvita Silva', message: 'peço oração pela minha mãe que fez 103 anos' },
  { name: 'Eduardo Félix', message: 'Essa oração que tá sendo estudada pela Nasa? 😳' },
  { name: 'Aline Torres', message: 'COMO ASSIM a NASA tá estudando uma oração??? Serioo! 😳' },
  { name: 'Nogueira', message: '🙏🙏🙏🙏🫨🫨🫨' },
  { name: 'Gabriel Diniz', message: 'Uau! Não sabia que até os cientistas estão estudando isso.❤️' },
  { name: 'Cintia Barreto', message: 'Nunca ouvi nada parecido. Estou impactada.' },
  { name: 'Carlos Eduardo', message: 'Cientistas ateus confirmando??? Deus mostrando que é real!' },
  { name: 'Cristiane Luz', message: 'Isso é profético! 🙌' },
  { name: 'Valdirene Costa', message: '2000 anos? Só pode ser de Deus mesmo!' },
  { name: 'Everton Gomes', message: 'Agora faz sentido tudo que tenho vivido ultimamente' },
  { name: 'Cida Reis', message: 'Misericórdia Senhor de todos nós vossos filhos e filhas.' },
  { name: 'Douglas Ramos', message: 'Meu espírito confirma… isso é muito sério.' },
  { name: 'Gilsandra de Oliveira', message: 'Obrigada, Deus 🙏🙏🙏' },
  { name: 'Vania Lucia', message: 'SALVA o BRASIL Senhor JESUS 🙏🏻🙏🏻🙏🏻🇧🇷' },
  { name: 'Priscila', message: '🙌🙌🙌' },
  { name: 'Denise Rocha', message: 'Não é à toa que a Maçonaria escondeu isso' },
  { name: 'Heloísa Cardoso', message: 'Deus escolheu o momento certo pra revelar isso' },
  { name: 'Paulo G.', message: 'Eu sabia que os maçons escondiam algo secreto...' },
  { name: 'Lívia Santos', message: 'Então é isso que os judeus usam há séculos pra atrair riqueza? 😮✨' },
  { name: 'Ruth Cardoso', message: 'Eu sabia que o Neymar tinha esses segredinhos' },
  { name: 'Carlos M.', message: 'Luciano Huck?? Nunca imaginei ele envolvido nisso 😳' },
  { name: 'Patrícia Gomes', message: 'Se isso ajudou até Davi e Salomão… 🙌 já quero ouvir essa oração!' },
  { name: 'Cláudia Lima', message: 'Eu prometo usar essa oração pra ajudar minha família toda ❤️❤️' },
  { name: 'Tiene Delvalles', message: 'Meu Deus quanto famosos estão usando essa benção!!' },
  { name: 'Elizângela F.', message: 'Não é justo! A gente ralando todo dia e eles com esse segredo guardado Graças a Deus o Padre esta mostrado para a gente' },
  { name: 'Camila Andrade', message: 'Sinto que essa live vai mudar minha vida. Estou aqui por um propósito divino! Gloria a Deus ❤️' },
  { name: 'Fernanda Salomão', message: 'Obrigada por ter coragem de falar isso, padre! 🕊️' },
  { name: 'João Batista', message: 'Tô curioso… nunca vi o Padre assim tão sério 🙏' },
  { name: 'Carmem Lúcia', message: 'Gente, segura a emoção… lá vem bênção forte!' },
  { name: 'Mônica Vieira', message: 'Alguém mais tá com o coração batendo forte?' },
  { name: 'Paulo Sérgio', message: 'Algo me diz que isso vai mudar tudo… 🙌' },
  { name: 'Vera Lima', message: 'Que testemunhos lindos 🕊️😭' },
  { name: 'Eduardo Lima', message: 'Essa oração precisa ser espalhada pro mundo! Que coisa linda 😭' },
  { name: 'Renata Campos', message: 'Isso não tem como ser coincidência. É Deus!' },
  { name: 'Carlos Junior', message: 'quero esse milagre tbm 🙏' },
  { name: 'Tânia Rocha', message: 'Padre, como faço pra ouvir a oração todo dia?' },
  { name: 'Luciana Dantas', message: 'Amo vender doces também! Vou começar a fazer essa oração amanhã cedo' },
  { name: 'Carla Montes', message: 'Amém!! 🙏❤️' },
  { name: 'Cícera Maria', message: 'A fé move montanhas! Já tô com lágrimas nos olhos 😭' },
  { name: 'Tainá Moura', message: 'Chorei aqui… o milagre do casamento restaurado me pegou 😭' },
  { name: 'Francisco Silva', message: 'Amém Jesus! Que bênção ouvir esses relatos 🙏' },
  { name: 'Neide Rodrigues', message: 'Amém! Que oração maravilhosa, quero escutar ouvi-la!' },
  { name: 'Denise F.', message: 'Essa oração veio direto do céu!' },
  { name: 'Luciana Prado', message: 'Glória a Deus pela cura, padre! 🙏' },
  { name: 'Dona Nai', message: 'Eu também sinto dores fortes na coluna, vou fazer essa oração com fé! 😢' },
  { name: 'Vanessa Ribeiro', message: 'Gente, o padre tá falando que vai mudar tudo o que sabemos sobre milagres… Tô arrepiada 🙏' },
  { name: 'João Batista', message: 'Não conhecia o Padre Fernando, mas já senti uma paz só de ouvir ele 🙌' },
  { name: 'Gabriel Nogueira', message: 'Isso aqui tá diferente… não é live comum não. É coisa divina mesmo 🙏' },
  { name: 'Patrícia Silveira', message: 'Padre, é verdade que a oração funciona até pra quem tá afastado da fé? 😢' },
];

const ChatMessage = ({ name, message, avatarUrl, avatarHint, isSupport = false }: ChatMessageData) => (
  <div className="flex items-start gap-2 p-2 hover:bg-gray-200/50 rounded-md">
    <Avatar className="h-6 w-6">
      {avatarUrl ? <AvatarImage src={avatarUrl} alt={name} data-ai-hint={avatarHint} /> : <AvatarFallback className="bg-neutral-300 text-black text-xs">{name.charAt(0)}</AvatarFallback>}
    </Avatar>
    <div className="flex-1">
      <span className={`text-sm font-semibold ${isSupport ? 'text-yellow-500' : 'text-neutral-500'}`}>{name}</span>
      <p className="text-sm text-black break-words">{message}</p>
    </div>
  </div>
);

const BuyButton = () => {
  const [show, setShow] = useState(false);

  useEffect(() => {
    // Show after 7 minutes and 45 seconds
    const timer = setTimeout(() => {
      setShow(true);
    }, (7 * 60 + 45) * 1000);

    return () => clearTimeout(timer);
  }, []);

  const handleBuyClick = () => {
    window.open('https://pay.kirvano.com/2d0b11fd-7cc5-4e38-bbbe-04158ec5a79e', '_self');
  };
  
  // Reserve space to prevent layout shift
  if (!show) {
    return <div className="h-[76px] md:h-[92px]" />;
  }

  return (
    <Button
      size="lg"
      className="bg-green-600 hover:bg-green-700 text-white font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal w-full max-w-lg mx-auto"
      onClick={handleBuyClick}
    >
      EU QUERO A FREQUÊNCIA
    </Button>
  );
};

export default function FrequenciaDaCuraPage() {
  const [viewerCount] = useState(55452);
  const [liveTime, setLiveTime] = useState('');

  useEffect(() => {
    const now = new Date();
    const time = now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
    const date = now.toLocaleDateString('pt-BR');
    setLiveTime(`às ${time}, ${date}`);
  }, []);
  
  useEffect(() => {
    const scriptId = "vturb-player-script-685fefad80579a0ff032f65c";
    if (document.getElementById(scriptId)) return;

    const script = document.createElement("script");
    script.id = scriptId;
    script.src = "https://scripts.converteai.net/62757a1b-3965-4814-8cfb-7803a2e429e1/players/685fefad80579a0ff032f65c/v4/player.js";
    script.async = true;
    document.head.appendChild(script);

    return () => {
      const existingScript = document.getElementById(scriptId);
      if (existingScript && existingScript.parentNode) {
        existingScript.parentNode.removeChild(existingScript);
      }
    };
  }, []);
  
  return (
    <div className="bg-white text-black font-sans">
      <header className="flex items-center justify-between px-4 py-2 bg-white border-b border-neutral-200 z-10 sticky top-0 shrink-0">
        <div className="flex items-center gap-4 shrink-0">
          <Menu className="h-6 w-6 text-neutral-800" />
          <Image
            src="https://classic.exame.com/wp-content/uploads/2017/08/new-youtube-logo-840x402.jpg"
            alt="YouTube Logo"
            width={90}
            height={20}
            className="object-contain"
            data-ai-hint="youtube logo"
          />
        </div>
        <div className="hidden sm:flex flex-1 justify-center px-4">
          <div className="w-full max-w-lg flex">
            <Input
              placeholder="Pesquisar"
              className="bg-white border-neutral-300 rounded-l-full rounded-r-none h-10 px-4 flex-1 focus:ring-1 focus:ring-blue-500 border-r-0"
            />
            <Button variant="secondary" className="bg-white hover:bg-gray-100 rounded-r-full rounded-l-none h-10 px-6 border border-neutral-300 border-l-0">
              <Search className="h-5 w-5" />
            </Button>
          </div>
        </div>
        <div className="flex items-center gap-4 shrink-0">
          <Search className="h-6 w-6 text-neutral-800 sm:hidden" />
          <UserCircle className="h-8 w-8 text-neutral-800" />
        </div>
      </header>

      <main className="grid grid-cols-1 lg:grid-cols-[1fr_402px]">
        {/* Video and Info Section */}
        <div className="flex flex-col px-4 lg:px-6 py-4">
          <div
            id="video-container"
            className="relative w-full aspect-video"
          >
            <div dangerouslySetInnerHTML={{ __html: `<vturb-smartplayer id="vid-685fefad80579a0ff032f65c" style="display: block; margin: 0 auto; width: 100%;"></vturb-smartplayer>` }} />
          </div>

          <div className="mt-8 text-center">
            <BuyButton />
          </div>

          <div className="mt-4">
            <h1 className="text-xl font-bold mb-1 break-words">
              Padre Fernando Lisboa | As frequências da cura oração de Santo Antônio escondida pela Maçonaria por mais de 800 anos que tem trazido milagres a mais de 59 mil pessoas | Live Ao Vivo {liveTime && `${liveTime}.`}
            </h1>
            <div className="text-sm text-neutral-600 mb-4">
              <span className="font-bold">{viewerCount.toLocaleString('pt-BR')} assistindo agora</span>
            </div>
            <div className="flex items-center justify-between flex-wrap gap-4">
              <div className="flex items-center gap-3">
                <Avatar>
                  <AvatarImage src="https://xn--oraaosecreta-mdb.site/live/images/osa_foto_perfil_padre.webp" alt="Fernando Lisboa" />
                  <AvatarFallback>FL</AvatarFallback>
                </Avatar>
                <div>
                  <p className="font-semibold">Fernando Lisboa</p>
                  <p className="text-sm text-neutral-600">96 mil inscritos</p>
                </div>
              </div>
              <Button className="bg-black text-white font-semibold hover:bg-neutral-800 rounded-full">
                Inscrever-se
              </Button>
            </div>
          </div>
        </div>

        {/* Chat Section */}
        <div className="w-full border-t lg:border-t-0 lg:border-l flex flex-col">
          <div className="p-4 border-b shrink-0">
            <h2 className="font-bold">Live chat</h2>
          </div>
          <div className="flex-1 p-2">
            <div className="flex flex-col gap-2">
              {allChatMessages.map((msg, index) => (
                <ChatMessage key={index} {...msg} />
              ))}
            </div>
          </div>
          <div className="p-4 border-t bg-white shrink-0">
            <div className="relative">
              <Input
                placeholder="Chat..."
                className="bg-white border-neutral-300 rounded-full h-10 pl-4 pr-10"
                disabled
              />
              <Smile className="absolute right-3 top-1/2 -translate-y-1/2 h-5 w-5 text-neutral-500" />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/frequenciadacura/page.tsx

// ====================================================================================================

// FILE: src/app/frequenciasdacura/page.tsx
'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import { Menu, Search, Smile, UserCircle } from 'lucide-react';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';

type ChatMessageData = {
  name: string;
  message: string;
  isSupport?: boolean;
  avatarUrl?: string;
  avatarHint?: string;
};

const allChatMessages: ChatMessageData[] = [
  { name: 'Roberto Silva', message: 'Que Deus abençoe a todos! 🙏 Em nome de jesus', avatarUrl: 'https://thumbs2.imgbox.com/14/e9/DUPvPss9_t.jpg', avatarHint: 'man portrait' },
  { name: 'Carla Fernandes', message: 'Cheguei agora, o que tá acontecendo? Já começou?', avatarUrl: 'https://thumbs2.imgbox.com/dd/55/H0rZXQVM_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Ediene Silva', message: 'ó Jesus e Maria fortalece minha vida e a de João Batista na união vinda de vós pelo espírito santo amém' },
  { name: 'Terezinha Souza', message: 'Amém, meu Deus! Só Tu és fiel ❤️', avatarUrl: 'https://thumbs2.imgbox.com/3d/ae/bHEFsuqi_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Sueli Andrade', message: 'Nossa, entrei bem na hora da oração… Graças a Deus 😇😇' },
  { name: 'André Luiz', message: 'Deus é maravilhoso! Amém 🙌', avatarUrl: 'https://thumbs2.imgbox.com/7b/b0/gsYWvBdF_t.jpg', avatarHint: 'man portrait' },
  { name: 'Paulo César', message: 'Senhor, guia nossos passos!' },
  { name: 'Vera Lúcia', message: 'Abençoa, Senhor, cada família conectada nessa live 🙌🙌🙌' },
  { name: 'Iracema Nogueira', message: '❤️❤️❤️❤️❤️' },
  { name: 'Claudete Ferreira', message: 'Amén!! 🙏🙏🙏' },
  { name: 'Gilberto Lima', message: 'Poxa interessante uma Oração de 800 anos? Só pode ser de Deus mesmo' },
  { name: 'Regina Célia', message: 'Glória a Ti, Senhor! Estamos prontos 🙏', avatarUrl: 'https://thumbs2.imgbox.com/65/6a/L5JO7ilQ_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Marta de Jesus', message: 'Comecei a assistir agora… alguém já usou essa oração?' },
  { name: 'Eliane Ramos', message: '🙏🙏🙏' },
  { name: 'Equipe de Suporte', message: 'Sim, Marta! Milhares de pessoas já estão relatando curas, bênçãos financeiras e restauração familiar com as Frequências da Cura. 🙌📿', isSupport: true },
  { name: 'Joana Lima', message: 'Amém, glória a Deus!', avatarUrl: 'https://thumbs2.imgbox.com/87/54/0dMM6ESV_t.png', avatarHint: 'woman portrait' },
  { name: 'Neide Souza', message: 'Amém, amém, amém!!!' },
  { name: 'Paulo Vieira', message: '😇😇😇😇😇😇', avatarUrl: 'https://thumbs2.imgbox.com/48/18/9JtnHEjz_t.png', avatarHint: 'man portrait' },
  { name: 'Ana Paula', message: 'Amém 🙏 Deus é fiel' },
  { name: 'Adriana Gomes', message: 'Aleluia!!' },
  { name: 'Jacinta Feitosa', message: 'Bom dia peço oração pela minha família, minha filha, meu esposo e a mim. Principalmente pela conversão do meu esposo, livrai-nos de todos os perigos. E que o Espírito Santo esteja conosco.' },
  { name: 'Maria Rita', message: 'Aqui é a Maria Rita de Aparecida - SP. Peço oração para quitar 80 mil em dívidas de cartão de crédito e para abençoar os estudos dos netos…' },
  { name: 'Severiana Amorim', message: 'peço orações pela minha família' },
  { name: 'Cláudio Teixeira', message: 'Senhor, me ajuda a pagar meu aluguel esse mês.' },
  { name: 'Lucas Bernardes', message: 'Sou de Goiânia. Posso pedir oração pelo meu negócio?', avatarUrl: 'https://thumbs2.imgbox.com/72/dc/GT3YxWwY_t.jpg', avatarHint: 'man portrait' },
  { name: 'Marta Helena', message: 'Alguém mais sentindo uma paz diferente nesse momento?', avatarUrl: 'https://thumbs2.imgbox.com/da/67/ajSKP3eY_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Adriana Lins', message: 'Amados irmãos, vamos orar com fé 🙏' },
  { name: 'Alex Rodrigues', message: 'A minha família é uma benção...' },
  { name: 'Gerson Oliveira', message: 'Essa live vai ficar salva depois? Quero mandar pra minha mãe.' },
  { name: 'José da Silva', message: 'Sou o José da Silva de Fortaleza. peço uma bênção de um emprego para tirar a família das dificuldades e realizar o sonho da casa própria…' },
  { name: 'Henrique', message: 'Deus abençoe minha família, abre as portas de trabalho pra minha irmã Joyce.' },
  { name: 'Sérgio Lima', message: 'Esse canal é novo? Como nunca vi isso antes? Que benção🙏' },
  { name: 'Ivone Oliveira', message: 'Meu Senhor e Meu Deus,rezo hoje por todas as minhas intenções e por todos os que me pedem orações....' },
  { name: 'Tiene Delvalles', message: 'pela saúde de meus filos' },
  { name: 'Edhite Souza', message: 'Orações em ação de graças pela paz do mundo inteiro. 🙏' },
  { name: 'Rosana Oliveira', message: 'Peço orações pela cura da minha mãe que se encontra hospitalizada em estado grave🥺JESUS EU CREI MAS AUMENTA A MINHA FÉ 😭😭😭', avatarUrl: 'https://thumbs2.imgbox.com/eb/cb/zfODzSUu_t.png', avatarHint: 'woman portrait' },
  { name: 'Márcia Cardoso', message: 'Padre, sou a Márcia de BH. Peço oração pelo meu casamento e pelas minhas dores nas juntas e problemas de diabetes…' },
  { name: 'Margarida Maria', message: 'Padre peço sua benção pra minha familia pela converssão de todos.❤️' },
  { name: 'Beatriz Santos', message: 'pela cirurgia do coração da minha netinha Ária. Jesus eu confio em vós. 🙏🙏🙏🙏' },
  { name: 'Denize Michelle', message: 'Pelo meu matrimônio, meus filhos' },
  { name: 'Semirames', message: 'Rezo pela minha vida profissional, que Deus faça o melhor por mim.' },
  { name: 'Sandra', message: 'Padre, reze pra trazer meu marido de volta… ele saiu de casa faz 2 meses 😢' },
  { name: 'Carlos Eduardo', message: 'Ore pela minha mãe, Padre… ela está lutando contra um câncer e precisa de forças 🙏📿', avatarUrl: 'https://thumbs2.imgbox.com/c3/9d/Qq4PQmYc_t.jpg', avatarHint: 'man portrait' },
  { name: 'Dona Terezinha', message: 'Peço oração pela minha filha que está com depressão… que Deus cure o coração dela 🙏' },
  { name: 'Cida Ramos', message: 'Amém! Que bênção 🙏' },
  { name: 'Elis Regina', message: 'A-M-É-M 🙌' },
  { name: 'Moisés Ribeiro', message: '59 mil pessoas e todas unidas em oração… é emocionante.' },
  { name: 'Marenilde Sousa', message: 'rezo pela minha família, pelos meus filhos, pela minha vida espiritual, financeira, sentimental e física' },
  { name: 'Luciana Mendes', message: 'Só pode ser algo muito poderoso mesmo' },
  { name: 'Roberto Carvalho', message: 'Acabei de pesquisar no Google, é realmente não tem anda parecido! que interessante Gloria a Deus' },
  { name: 'Delvita Silva', message: 'peço oração pela minha mãe que fez 103 anos' },
  { name: 'Eduardo Félix', message: 'Essa oração que tá sendo estudada pela Nasa? 😳' },
  { name: 'Aline Torres', message: 'COMO ASSIM a NASA tá estudando uma oração??? Serioo! 😳' },
  { name: 'Nogueira', message: '🙏🙏🙏🙏🫨🫨🫨' },
  { name: 'Gabriel Diniz', message: 'Uau! Não sabia que até os cientistas estão estudando isso.❤️' },
  { name: 'Cintia Barreto', message: 'Nunca ouvi nada parecido. Estou impactada.' },
  { name: 'Carlos Eduardo', message: 'Cientistas ateus confirmando??? Deus mostrando que é real!' },
  { name: 'Cristiane Luz', message: 'Isso é profético! 🙌' },
  { name: 'Valdirene Costa', message: '2000 anos? Só pode ser de Deus mesmo!' },
  { name: 'Everton Gomes', message: 'Agora faz sentido tudo que tenho vivido ultimamente' },
  { name: 'Cida Reis', message: 'Misericórdia Senhor de todos nós vossos filhos e filhas.' },
  { name: 'Douglas Ramos', message: 'Meu espírito confirma… isso é muito sério.' },
  { name: 'Gilsandra de Oliveira', message: 'Obrigada, Deus 🙏🙏🙏' },
  { name: 'Vania Lucia', message: 'SALVA o BRASIL Senhor JESUS 🙏🏻🙏🏻🙏🏻🇧🇷' },
  { name: 'Priscila', message: '🙌🙌🙌' },
  { name: 'Denise Rocha', message: 'Não é à toa que a Maçonaria escondeu isso' },
  { name: 'Heloísa Cardoso', message: 'Deus escolheu o momento certo pra revelar isso' },
  { name: 'Paulo G.', message: 'Eu sabia que os maçons escondiam algo secreto...' },
  { name: 'Lívia Santos', message: 'Então é isso que os judeus usam há séculos pra atrair riqueza? 😮✨' },
  { name: 'Ruth Cardoso', message: 'Eu sabia que o Neymar tinha esses segredinhos' },
  { name: 'Carlos M.', message: 'Luciano Huck?? Nunca imaginei ele envolvido nisso 😳' },
  { name: 'Patrícia Gomes', message: 'Se isso ajudou até Davi e Salomão… 🙌 já quero ouvir essa oração!' },
  { name: 'Cláudia Lima', message: 'Eu prometo usar essa oração pra ajudar minha família toda ❤️❤️' },
  { name: 'Tiene Delvalles', message: 'Meu Deus quanto famosos estão usando essa benção!!' },
  { name: 'Elizângela F.', message: 'Não é justo! A gente ralando todo dia e eles com esse segredo guardado Graças a Deus o Padre esta mostrado para a gente' },
  { name: 'Camila Andrade', message: 'Sinto que essa live vai mudar minha vida. Estou aqui por um propósito divino! Gloria a Deus ❤️' },
  { name: 'Fernanda Salomão', message: 'Obrigada por ter coragem de falar isso, padre! 🕊️' },
  { name: 'João Batista', message: 'Tô curioso… nunca vi o Padre assim tão sério 🙏' },
  { name: 'Carmem Lúcia', message: 'Gente, segura a emoção… lá vem bênção forte!' },
  { name: 'Mônica Vieira', message: 'Alguém mais tá com o coração batendo forte?' },
  { name: 'Paulo Sérgio', message: 'Algo me diz que isso vai mudar tudo… 🙌' },
  { name: 'Vera Lima', message: 'Que testemunhos lindos 🕊️😭' },
  { name: 'Eduardo Lima', message: 'Essa oração precisa ser espalhada pro mundo! Que coisa linda 😭' },
  { name: 'Renata Campos', message: 'Isso não tem como ser coincidência. É Deus!' },
  { name: 'Carlos Junior', message: 'quero esse milagre tbm 🙏' },
  { name: 'Tânia Rocha', message: 'Padre, como faço pra ouvir a oração todo dia?' },
  { name: 'Luciana Dantas', message: 'Amo vender doces também! Vou começar a fazer essa oração amanhã cedo' },
  { name: 'Carla Montes', message: 'Amém!! 🙏❤️' },
  { name: 'Cícera Maria', message: 'A fé move montanhas! Já tô com lágrimas nos olhos 😭' },
  { name: 'Tainá Moura', message: 'Chorei aqui… o milagre do casamento restaurado me pegou 😭' },
  { name: 'Francisco Silva', message: 'Amém Jesus! Que bênção ouvir esses relatos 🙏' },
  { name: 'Neide Rodrigues', message: 'Amém! Que oração maravilhosa, quero escutar ouvi-la!' },
  { name: 'Denise F.', message: 'Essa oração veio direto do céu!' },
  { name: 'Luciana Prado', message: 'Glória a Deus pela cura, padre! 🙏' },
  { name: 'Dona Nai', message: 'Eu também sinto dores fortes na coluna, vou fazer essa oração com fé! 😢' },
  { name: 'Vanessa Ribeiro', message: 'Gente, o padre tá falando que vai mudar tudo o que sabemos sobre milagres… Tô arrepiada 🙏' },
  { name: 'João Batista', message: 'Não conhecia o Padre Fernando, mas já senti uma paz só de ouvir ele 🙌' },
  { name: 'Gabriel Nogueira', message: 'Isso aqui tá diferente… não é live comum não. É coisa divina mesmo 🙏' },
  { name: 'Patrícia Silveira', message: 'Padre, é verdade que a oração funciona até pra quem tá afastado da fé? 😢' },
];

const ChatMessage = ({ name, message, avatarUrl, avatarHint, isSupport = false }: ChatMessageData) => (
  <div className="flex items-start gap-2 p-2 hover:bg-gray-200/50 rounded-md">
    <Avatar className="h-6 w-6">
      {avatarUrl ? <AvatarImage src={avatarUrl} alt={name} data-ai-hint={avatarHint} /> : <AvatarFallback className="bg-neutral-300 text-black text-xs">{name.charAt(0)}</AvatarFallback>}
    </Avatar>
    <div className="flex-1">
      <span className={`text-sm font-semibold ${isSupport ? 'text-yellow-500' : 'text-neutral-500'}`}>{name}</span>
      <p className="text-sm text-black break-words">{message}</p>
    </div>
  </div>
);

export default function FrequenciasDaCuraPage() {
  const [viewerCount] = useState(55452);
  const [liveTime, setLiveTime] = useState('');
  const [showBuyButton, setShowBuyButton] = useState(false);

  useEffect(() => {
    const timer = setTimeout(() => {
      setShowBuyButton(true);
    }, (36 * 60 + 38) * 1000); // 36 minutes and 38 seconds

    return () => clearTimeout(timer);
  }, []);

  useEffect(() => {
    const now = new Date();
    const time = now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
    const date = now.toLocaleDateString('pt-BR');
    setLiveTime(`às ${time}, ${date}`);
  }, []);
  
  useEffect(() => {
    const scriptId = "vturb-player-script-685f710952325b14a81dc1dd";
    if (document.getElementById(scriptId)) return;

    const script = document.createElement("script");
    script.id = scriptId;
    script.src = "https://scripts.converteai.net/62757a1b-3965-4814-8cfb-7803a2e429e1/players/685f710952325b14a81dc1dd/v4/player.js";
    script.async = true;
    document.head.appendChild(script);

    return () => {
      const existingScript = document.getElementById(scriptId);
      if (existingScript && existingScript.parentNode) {
        existingScript.parentNode.removeChild(existingScript);
      }
    };
  }, []);

  const handleBuyClick = () => {
    window.open('https://pay.kirvano.com/42887aa4-262c-435e-b91c-42a8f8f4d849', '_self');
  };

  return (
    <div className="bg-white text-black font-sans">
      <header className="flex items-center justify-between px-4 py-2 bg-white border-b border-neutral-200 z-10 sticky top-0 shrink-0">
        <div className="flex items-center gap-4 shrink-0">
          <Menu className="h-6 w-6 text-neutral-800" />
          <Image
            src="https://classic.exame.com/wp-content/uploads/2017/08/new-youtube-logo-840x402.jpg"
            alt="YouTube Logo"
            width={90}
            height={20}
            className="object-contain"
            data-ai-hint="youtube logo"
          />
        </div>
        <div className="hidden sm:flex flex-1 justify-center px-4">
          <div className="w-full max-w-lg flex">
            <Input
              placeholder="Pesquisar"
              className="bg-white border-neutral-300 rounded-l-full rounded-r-none h-10 px-4 flex-1 focus:ring-1 focus:ring-blue-500 border-r-0"
            />
            <Button variant="secondary" className="bg-white hover:bg-gray-100 rounded-r-full rounded-l-none h-10 px-6 border border-neutral-300 border-l-0">
              <Search className="h-5 w-5" />
            </Button>
          </div>
        </div>
        <div className="flex items-center gap-4 shrink-0">
          <Search className="h-6 w-6 text-neutral-800 sm:hidden" />
          <UserCircle className="h-8 w-8 text-neutral-800" />
        </div>
      </header>

      <main className="grid grid-cols-1 lg:grid-cols-[1fr_402px]">
        {/* Video and Info Section */}
        <div className="flex flex-col px-4 lg:px-6 py-4">
          <div
            id="video-container"
            className="relative w-full bg-black aspect-video"
          >
            <div dangerouslySetInnerHTML={{ __html: `<vturb-smartplayer id="vid-685f710952325b14a81dc1dd" style="display: block; margin: 0 auto; width: 100%;"></vturb-smartplayer>` }} />
          </div>

          {showBuyButton && (
            <div className="mt-8 text-center">
              <Button
                size="lg"
                className="bg-green-600 hover:bg-green-700 text-white font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal w-full max-w-lg mx-auto"
                onClick={handleBuyClick}
              >
                EU QUERO ESSAS ORAÇÕES
              </Button>
            </div>
          )}

          <div className="mt-4">
            <h1 className="text-xl font-bold mb-1 break-words">
              Padre Fernando Lisboa | As Frequências da Cura: a oração escondida pela Maçonaria por mais de 800 anos que tem trazido milagres a mais de 59 mil pessoas | Live Ao Vivo {liveTime && `${liveTime}.`}
            </h1>
            <div className="text-sm text-neutral-600 mb-4">
              <span className="font-bold">{viewerCount.toLocaleString('pt-BR')} assistindo agora</span>
            </div>
            <div className="flex items-center justify-between flex-wrap gap-4">
              <div className="flex items-center gap-3">
                <Avatar>
                  <AvatarImage src="https://xn--oraaosecreta-mdb.site/live/images/osa_foto_perfil_padre.webp" alt="Fernando Lisboa" />
                  <AvatarFallback>FL</AvatarFallback>
                </Avatar>
                <div>
                  <p className="font-semibold">Fernando Lisboa</p>
                  <p className="text-sm text-neutral-600">96 mil inscritos</p>
                </div>
              </div>
              <Button className="bg-black text-white font-semibold hover:bg-neutral-800 rounded-full">
                Inscrever-se
              </Button>
            </div>
          </div>
        </div>

        {/* Chat Section */}
        <div className="w-full border-t lg:border-t-0 lg:border-l flex flex-col">
          <div className="p-4 border-b shrink-0">
            <h2 className="font-bold">Live chat</h2>
          </div>
          <div className="flex-1 p-2">
            <div className="flex flex-col gap-2">
              {allChatMessages.map((msg, index) => (
                <ChatMessage key={index} {...msg} />
              ))}
            </div>
          </div>
          <div className="p-4 border-t bg-white shrink-0">
            <div className="relative">
              <Input
                placeholder="Chat..."
                className="bg-white border-neutral-300 rounded-full h-10 pl-4 pr-10"
                disabled
              />
              <Smile className="absolute right-3 top-1/2 -translate-y-1/2 h-5 w-5 text-neutral-500" />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

// END FILE: src/app/frequenciasdacura/page.tsx

// ====================================================================================================

// FILE: src/app/globals.css
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 53 67% 91%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 45 100% 51%;
    --primary-foreground: 0 0% 3.9%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 30 95% 50%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 45 100% 51%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
    --quiz-background: 210 100% 98%;
  }
  .dark {
    --background: 53 67% 91%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 45 100% 51%;
    --primary-foreground: 0 0% 3.9%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 30 95% 50%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 45 100% 51%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
    --quiz-background: 210 100% 98%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}
// END FILE: src/app/globals.css

// ====================================================================================================

// FILE: src/app/layout.tsx
import type {Metadata} from 'next';
import Script from 'next/script';
import './globals.css';
import { Toaster } from "@/components/ui/toaster";
import { DisableDevTools } from '@/components/disable-devtools';

export const metadata: Metadata = {
  title: 'Orações Secretas',
  description: 'Hoje pode ser o dia da sua vitória: descubra as orações secretas para restaurar sua saúde e sua vida',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="pt-BR">
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap" rel="stylesheet" />
        {/* Meta Pixel Code */}
        <Script id="fb-pixel-osegredovaticano" strategy="afterInteractive">
          {`
            !function(f,b,e,v,n,t,s)
            {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
            n.callMethod.apply(n,arguments):n.queue.push(arguments)};
            if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
            n.queue=[];t=b.createElement(e);t.async=!0;
            t.src=v;s=b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t,s)}(window, document,'script',
            'https://connect.facebook.net/en_US/fbevents.js');
            fbq('init', '612623455156577');
            fbq('track', 'PageView');
          `}
        </Script>
      </head>
      <body className="font-body antialiased">
        <noscript>
          <img
            height="1"
            width="1"
            style={{ display: 'none' }}
            src="https://www.facebook.com/tr?id=612623455156577&ev=PageView&noscript=1"
            alt=""
          />
        </noscript>
        <DisableDevTools />
        {children}
        <Toaster />
      </body>
    </html>
  );
}
// END FILE: src/app/layout.tsx

// ====================================================================================================

// FILE: src/app/oferta-final/page.tsx
'use client';

import { useSearchParams } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { Footer } from '@/components/landing/footer';
import { RosaryIcon } from '@/components/landing/rosary-icon';
import { BookOpen, Headphones, Gift, Check, Lock, ShieldCheck, ScrollText, Mail, CircleHelp } from 'lucide-react';
import Image from 'next/image';

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function OfertaFinalPage() {
  const searchParams = useSearchParams();
  const name = searchParams.get('name') || '';

  const handleCheckout = () => {
    window.open('https://pay.kirvano.com/some-checkout-link', '_self');
  };

  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-3xl w-full">
          <Card className="bg-white/80 backdrop-blur-sm mb-10 rounded-xl shadow-2xl border border-blue-200">
            <CardContent className="p-6 md:p-8">
              <h1 className="text-2xl md:text-4xl font-bold text-blue-800 mb-2 uppercase">
                <Lock className="inline-block w-8 h-8 mr-2 align-middle" />
                A Oração Revelada Pelo Vaticano Feita Especialmente Para Você{name ? `, ${name.split(' ')[0]}` : ''}
              </h1>
              <p className="text-lg md:text-xl text-blue-900/80 mb-6 font-bold">
                Receba uma oração guardada por anos nos arquivos do Vaticano, revelada por Papa Francisco a um frei brasileiro pouco antes de uma audiência privada. Ela foi cuidadosamente traduzida e preparada para tocar a sua alma, abrir seus caminhos e trazer respostas do Céu ao seu coração.
              </p>
              
              <Image
                src="https://i.imgur.com/WnIxuok.png"
                alt="Oração Secreta"
                width={600}
                height={400}
                className="mx-auto my-6 rounded-lg shadow-lg"
                data-ai-hint="praying person"
              />

              <div className="text-left space-y-8 text-blue-950">
                <div>
                  <h2 className="text-xl font-bold text-blue-800 mb-4 flex items-center gap-3">
                    <ShieldCheck className="w-6 h-6" /> ✝️ Por que esta oração é tão especial?
                  </h2>
                  <ul className="space-y-3">
                    <li className="flex items-start gap-3">
                      <span className="text-xl shrink-0">📜</span>
                      <span><span className="font-semibold">Oração secreta traduzida</span> diretamente de manuscritos preservados no Vaticano</span>
                    </li>
                    <li className="flex items-start gap-3">
                      <span className="text-xl shrink-0">🙏</span>
                      <span><span className="font-semibold">Escolhida com base em seu momento espiritual</span> (via um pequeno questionário)</span>
                    </li>
                    <li className="flex items-start gap-3">
                      <span className="text-xl shrink-0">📩</span>
                      <span><span className="font-semibold">Entrega imediata</span> por e-mail e acesso online vitalício</span>
                    </li>
                     <li className="flex items-start gap-3">
                      <span className="text-xl shrink-0">🕊️</span>
                      <span><span className="font-semibold">Inspirada na orientação espiritual</span> de Papa Francisco e Padre Pio</span>
                    </li>
                  </ul>
                </div>
                <div>
                  <h2 className="text-xl font-bold text-blue-800 mb-4 flex items-center gap-3">
                    <Gift className="w-6 h-6" /> 🎁 Ao contribuir, você receberá:
                  </h2>
                  <ul className="space-y-3">
                      <li className="flex items-start gap-3">
                          <Check className="w-5 h-5 text-green-600 mt-1 shrink-0" />
                          <span><span className="font-semibold">A Oração Revelada pelo Vaticano:</span> Traduzida de um antigo dialeto litúrgico por um especialista, com narração devocional feita por um frei consagrado.</span>
                      </li>
                      <li className="flex items-start gap-3">
                          <Check className="w-5 h-5 text-green-600 mt-1 shrink-0" />
                          <span><span className="font-semibold">A Jornada de 30 Dias:</span> Um guia de reflexões espirituais diárias para ajudar você a viver com fé e propósito.</span>
                      </li>
                      <li className="flex items-start gap-3">
                          <Check className="w-5 h-5 text-green-600 mt-1 shrink-0" />
                          <span><span className="font-semibold">Diário de Milagres (PRESENTE EXCLUSIVO):</span> "Escreva seus pedidos, bênçãos e experiências. Ele será o testemunho do agir divino em sua vida."</span>
                      </li>
                      <li className="flex items-start gap-3">
                          <Check className="w-5 h-5 text-green-600 mt-1 shrink-0" />
                          <span><span className="font-semibold">Orações em Áudio (PRESENTE EXCLUSIVO):</span> "Escute a oração em momentos de paz ou aflição. Deixe a voz sagrada guiar seu coração."</span>
                      </li>
                      <li className="flex items-start gap-3">
                          <Check className="w-5 h-5 text-green-600 mt-1 shrink-0" />
                          <span><span className="font-semibold">Mensagens Devocionais Exclusivas:</span> Conteúdos inspiradores enviados diretamente ao seu e-mail.</span>
                      </li>
                  </ul>
                  <p className="italic text-blue-900/80 mt-4">“Filho, estes presentes foram preparados com amor, para que você sinta o céu mais perto do seu coração.”</p>
                </div>
                 <div>
                  <h2 className="text-xl font-bold text-blue-800 mb-4 flex items-center gap-3">
                    <CircleHelp className="w-6 h-6" /> 💬 Por que há uma contribuição?
                  </h2>
                    <p>Para tornar possível o acesso a esta oração rara e valiosa, foi necessário traduzir documentos antigos, produzir as versões em áudio e manter a plataforma online para milhares de fiéis. Por isso, pedimos uma contribuição simbólica única de <span className="font-bold">R$ 19,90</span> — que também ajuda a manter este projeto vivo, levando fé a quem mais precisa.</p>
                </div>
              </div>
            </CardContent>
          </Card>
          
          <Card className="bg-white/90 backdrop-blur-sm shadow-xl w-full border-2 border-green-500 rounded-xl">
            <CardContent className="p-6 md:p-8 space-y-4">
                <p className="font-bold text-2xl text-blue-800">🙌 Oferta de Fé:</p>
                <div>
                    <p className="text-xl text-blue-900/80">De: <span className="line-through text-red-600">R$ 119,90</span></p>
                </div>
                 <div>
                    <p className="font-semibold text-blue-800">Por:</p>
                    <p className="text-5xl font-bold text-green-600">R$ 19,90</p>
                    <p className="font-semibold text-blue-900/80">Contribuição única, com propósito espiritual</p>
                </div>
              <Button onClick={handleCheckout} size="lg" className="w-full bg-green-600 hover:bg-green-700 text-white font-bold h-auto py-4 animate-pulse whitespace-normal text-center text-lg md:text-xl">
                🎁 Clique abaixo para receber agora sua oração revelada pelo Vaticano.
              </Button>
              <div className="text-center text-blue-900/80 text-sm space-y-2 mt-4">
                 <p className="font-bold">✅ Garantia de Fé:</p>
                 <p>7 dias de bênção ou sua contribuição será devolvida.</p>
                 <p>Se sua alma não for tocada, devolvemos sua oferta sem questionamentos.</p>
                 <p>🔒 Contribuição protegida e guiada pela fé.</p>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
      <Footer />
    </div>
  );
}
// END FILE: src/app/oferta-final/page.tsx

// ====================================================================================================

// FILE: src/app/osegredovaticano/loading/page.tsx
'use client';

import { useEffect, useState } from 'react';
import { useSearchParams, useRouter } from 'next/navigation';
import { Progress } from '@/components/ui/progress';
import { RosaryIcon } from '@/components/landing/rosary-icon';
import { Card, CardContent } from '@/components/ui/card';

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function LoadingPage() {
  const searchParams = useSearchParams();
  const router = useRouter();
  const name = searchParams.get('name') || '';

  const [progress, setProgress] = useState(13);

  useEffect(() => {
    const timer = setTimeout(() => setProgress(74), 500);

    const redirectTimer = setTimeout(() => {
      router.push(`/oferta-final?name=${encodeURIComponent(name)}`);
    }, 2500);

    return () => {
      clearTimeout(timer);
      clearTimeout(redirectTimer);
    };
  }, [name, router]);

  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-md w-full">
          <Card className="bg-white/80 backdrop-blur-sm p-6 md:p-8 rounded-xl shadow-2xl border border-blue-200">
            <CardContent className="space-y-6 text-blue-950">
              <h1 className="text-xl md:text-2xl font-bold text-center text-blue-800">
                BUSCANDO A ORAÇÃO IDEAL PARA VOCÊ{name ? `, ${name.split(' ')[0]}` : ''}...
              </h1>
              <Progress value={progress} className="w-full" />
              <p className="text-center text-blue-900/90 animate-pulse">
                Aguarde, o melhor está por vir....
              </p>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/osegredovaticano/loading/page.tsx

// ====================================================================================================

// FILE: src/app/osegredovaticano/nome/page.tsx
'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { RosaryIcon } from '@/components/landing/rosary-icon';
import { Card, CardContent } from '@/components/ui/card';

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function OsegredoVaticanoNomePage() {
  const [name, setName] = useState('');
  const router = useRouter();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    router.push(`/osegredovaticano/quiz3?name=${encodeURIComponent(name)}`);
  };

  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-md w-full">
          <Card className="bg-white/80 backdrop-blur-sm p-6 md:p-8 rounded-xl shadow-2xl border border-blue-200">
            <CardContent className="space-y-6 text-blue-950">
              <h1 className="text-xl md:text-2xl font-bold text-center text-blue-800">
                ORAÇÕES PARA SEUS MILAGRES
              </h1>
              <p className="font-semibold text-blue-800">Caminho Abençoado</p>
              <p className="text-center text-blue-900/90">
                Deixe seu nome abaixo para que possamos te mandar as orações específicas para seu problema 🙏
              </p>
              <form onSubmit={handleSubmit} className="space-y-4">
                <Input
                  type="text"
                  placeholder="Digite seu nome completo"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                  className="bg-white/50 border-blue-300 text-blue-800 placeholder:text-blue-500 text-center"
                  required
                />
                <Button
                  type="submit"
                  size="lg"
                  className="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold"
                >
                  Continuar
                </Button>
              </form>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/osegredovaticano/nome/page.tsx

// ====================================================================================================

// FILE: src/app/osegredovaticano/page.tsx
'use client';

import Image from 'next/image';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { RosaryIcon } from '@/components/landing/rosary-icon';

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function OsegredoVaticanoQuizPage() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-2xl w-full">
          <Image
            src="https://i.imgur.com/oU1Etag.png"
            alt="Manuscrito Sagrado"
            width={500}
            height={150}
            className="mx-auto mb-8 rounded-lg"
            data-ai-hint="sacred manuscript"
          />

          <h1 className="text-2xl md:text-4xl font-bold text-blue-800 mb-4 uppercase">
            Descubra as Orações Secretas que Podem Mudar Sua Vida Revelada Após 7 Chaves do Vaticano
          </h1>
          
          <p className="text-lg md:text-xl text-blue-900/90 mb-8 font-bold">
            Você foi guiado(a) até aqui por um motivo. Em poucos minutos, descubra esse segredo destinado para sua cura!
          </p>
          
          <Image
            src="https://i.imgur.com/5wARayj.png"
            alt="Cura Divina"
            width={600}
            height={400}
            className="mx-auto mb-8 rounded-lg shadow-lg"
            data-ai-hint="divine guidance"
          />
          
          <Link href="/osegredovaticano/quiz1">
            <Button size="lg" className="bg-blue-600 hover:bg-blue-700 text-white font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal text-center">
              Continuar
            </Button>
          </Link>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/osegredovaticano/page.tsx

// ====================================================================================================

// FILE: src/app/osegredovaticano/quiz1/page.tsx
'use client';

import { Button } from '@/components/ui/button';
import { RosaryIcon } from '@/components/landing/rosary-icon';
import { Card, CardContent } from '@/components/ui/card';
import Link from 'next/link';
import Image from 'next/image';

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function OsegredoVaticanoQuiz1Page() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-3xl w-full">
          <Card className="bg-white/80 backdrop-blur-sm p-6 md:p-8 rounded-xl shadow-2xl border border-blue-200">
            <CardContent className="text-left text-lg md:text-xl space-y-4 text-blue-950">
                <h1 className="text-2xl md:text-3xl font-bold text-center text-blue-800 mb-6">
                    🕯️ A Última Revelação: O Segredo do Papa Antes de Morrer
                </h1>
                <p>Poucos dias antes de sua morte, um dos últimos Papas fez algo que abalou os corredores silenciosos do Vaticano.</p>
                <p>Ele chamou um frei de confiança para uma conversa privada e disse com voz baixa:</p>
                <p className="italic font-semibold text-blue-800">“Há uma oração... uma oração escondida há séculos, que só pode ser revelada àqueles que estiverem prontos espiritualmente.”</p>
                <p>Essa oração havia sido guardada a sete chaves, trancada nos arquivos secretos do Vaticano, entre documentos selados com sangue, fé e temor.</p>
                <p>Segundo o Papa, essa oração foi passada de geração em geração, entre poucos escolhidos. Ela teria sido revelada por um anjo a um monge desconhecido, durante uma visão celestial no século XII — e só deveria ser revelada quando o mundo estivesse em profunda aflição espiritual.</p>
                <Image
                    src="https://static.nationalgeographicbrasil.com/files/styles/image_3200/public/004-2cmyk-blackmar28.webp?w=1450&h=1895&p=top"
                    alt="Papa em oração"
                    width={600}
                    height={777}
                    className="mx-auto my-6 rounded-lg shadow-lg"
                    data-ai-hint="praying pope"
                />
                <p className="italic font-semibold text-blue-800">“Agora é a hora. O mundo precisa dessa oração.”</p>
                <p>Dias depois, o Papa faleceu em silêncio... Mas o frei guardou essas palavras, e hoje, você pode ser uma das poucas pessoas a ter acesso a esse conteúdo sagrado.</p>
                <p>A oração, narrada por esse mesmo frei, está prestes a ser revelada — mas somente àqueles que abrirem as 7 chaves da fé.</p>
            </CardContent>
          </Card>
          
          <div className="mt-8 text-center">
            <h2 className="text-xl md:text-2xl font-bold text-blue-800 mb-6">
              ✝️ Você está pronto para acessar o que foi escondido por séculos?
            </h2>
            <Link href="/osegredovaticano/nome">
                <Button size="lg" className="bg-blue-600 hover:bg-blue-700 text-white font-bold text-lg md:text-xl py-4 px-8 uppercase shadow-lg h-auto whitespace-normal text-center">
                    Sim, estou pronto para a revelação
                </Button>
            </Link>
          </div>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/osegredovaticano/quiz1/page.tsx

// ====================================================================================================

// FILE: src/app/osegredovaticano/quiz3/page.tsx
'use client';

import { useSearchParams } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { RosaryIcon } from '@/components/landing/rosary-icon';
import { Card, CardContent } from '@/components/ui/card';
import Link from 'next/link';

const quizOptions = [
  { emoji: '💰', text: 'MINHA VIDA FINANCEIRA' },
  { emoji: '👨‍👩‍👧‍👦', text: 'MEU RELACIONAMENTO FAMILIAR' },
  { emoji: '❤️', text: 'MINHA VIDA AMOROSA' },
  { emoji: '🙏', text: 'MINHA VIDA ESPIRITUAL' },
  { emoji: '✨', text: 'TODAS AS OPÇÕES ACIMA' },
];

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function OsegredoVaticanoQuiz3Page() {
  const searchParams = useSearchParams();
  const name = searchParams.get('name');

  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-md w-full">
          <Card className="bg-white/80 backdrop-blur-sm p-6 md:p-8 rounded-xl shadow-2xl border border-blue-200">
            <CardContent className="space-y-6 text-blue-950">
              <h1 className="text-xl md:text-2xl font-bold text-center text-blue-800">
                {name ? `${name.split(' ')[0]}, QUAL PARTE`: 'QUAL PARTE'} DA SUA VIDA PRECISA MUDAR AGORA?
              </h1>
              <div className="space-y-4">
                {quizOptions.map((option, index) => (
                  <Link href={`/osegredovaticano/quiz4?name=${encodeURIComponent(name || '')}`} key={index} className="block w-full">
                    <Button
                      size="lg"
                      variant="outline"
                      className="w-full bg-white/50 hover:bg-white/90 border-blue-300 text-blue-800 font-semibold h-auto py-3 text-base justify-start whitespace-normal text-left"
                    >
                      <span className="mr-3 text-xl">{option.emoji}</span>
                      <span className="flex-1">{option.text}</span>
                    </Button>
                  </Link>
                ))}
              </div>
            </CardContent>
          </Card>
          <p className="mt-8 text-lg italic text-blue-900/80">"Ore como se tudo dependesse de Deus" - Santo Agostinho</p>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/osegredovaticano/quiz3/page.tsx

// ====================================================================================================

// FILE: src/app/osegredovaticano/quiz4/page.tsx
'use client';

import { useSearchParams } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { RosaryIcon } from '@/components/landing/rosary-icon';
import { Card, CardContent } from '@/components/ui/card';
import Link from 'next/link';

const quizOptions = [
  { text: 'ACREDITO FIELMENTE NISSO!' },
  { text: 'SIM! EU CREIO NO PODER DA ORAÇÃO' },
  { text: 'ACREDITO MAS ME SINTO DISTANTE...' },
  { text: 'TENHO DÚVIDAS, MAS QUERO VER' },
];

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function OsegredoVaticanoQuiz4Page() {
  const searchParams = useSearchParams();
  const name = searchParams.get('name');

  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-md w-full">
          <Card className="bg-white/80 backdrop-blur-sm p-6 md:p-8 rounded-xl shadow-2xl border border-blue-200">
            <CardContent className="space-y-6 text-blue-950">
              <h1 className="text-xl md:text-2xl font-bold text-center text-blue-800">
                {name ? `${name.split(' ')[0]}, você acredita` : 'Você acredita'} no poder das orações ocultas do vaticano revelada pelo Papa Francisco?
              </h1>
              <p className="text-center text-blue-900/90">Ele pode te ajudar a alcançar o que tanto precisa.</p>
              <div className="space-y-4">
                {quizOptions.map((option, index) => (
                  <Link href={`/osegredovaticano/quiz5?name=${encodeURIComponent(name || '')}`} key={index} className="block w-full">
                    <Button
                      size="lg"
                      variant="outline"
                      className="w-full bg-white/50 hover:bg-white/90 border-blue-300 text-blue-800 font-semibold h-auto py-3 text-base justify-center whitespace-normal text-center"
                    >
                      <span className="flex-1">{option.text}</span>
                    </Button>
                  </Link>
                ))}
              </div>
            </CardContent>
          </Card>
          <p className="mt-8 text-lg italic text-blue-900/80">"A fé é como a luz do sol que, sendo uma só, ilumina a todos"</p>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/osegredovaticano/quiz4/page.tsx

// ====================================================================================================

// FILE: src/app/osegredovaticano/quiz5/page.tsx
'use client';

import { useSearchParams } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { RosaryIcon } from '@/components/landing/rosary-icon';
import { Card, CardContent } from '@/components/ui/card';
import Link from 'next/link';

const quizOptions = [
  { text: 'Sim, com certeza' },
  { text: 'Talvez' },
  { text: 'Nunca pensei nisso' },
  { text: 'Não sei' },
];

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function OsegredoVaticanoQuiz5Page() {
  const searchParams = useSearchParams();
  const name = searchParams.get('name');

  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-md w-full">
          <Card className="bg-white/80 backdrop-blur-sm p-6 md:p-8 rounded-xl shadow-2xl border border-blue-200">
            <CardContent className="space-y-6 text-blue-950">
              <h1 className="text-xl md:text-2xl font-bold text-center text-blue-800">
                Você acredita que orações específicas têm mais poder quando são reveladas no momento certo?
              </h1>
              <div className="space-y-4">
                {quizOptions.map((option, index) => (
                  <Link href={`/osegredovaticano/quiz6?name=${encodeURIComponent(name || '')}`} key={index} className="block w-full">
                    <Button
                      size="lg"
                      variant="outline"
                      className="w-full bg-white/50 hover:bg-white/90 border-blue-300 text-blue-800 font-semibold h-auto py-3 text-base justify-center whitespace-normal text-center"
                    >
                      <span className="flex-1">{option.text}</span>
                    </Button>
                  </Link>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/osegredovaticano/quiz5/page.tsx

// ====================================================================================================

// FILE: src/app/osegredovaticano/quiz6/page.tsx
'use client';

import { useSearchParams } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { RosaryIcon } from '@/components/landing/rosary-icon';
import { Card, CardContent } from '@/components/ui/card';
import Link from 'next/link';

const quizOptions = [
  { text: 'Sim, estou pronto' },
  { text: 'Sim, com o coração aberto' },
  { text: 'Sim, quero o milagre' },
];

function RosaryPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-5 text-black pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <RosaryIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <RosaryIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <RosaryIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <RosaryIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}

export default function OsegredoVaticanoQuiz6Page() {
  const searchParams = useSearchParams();
  const name = searchParams.get('name');

  return (
    <div className="dark relative flex flex-col min-h-screen bg-[hsl(var(--quiz-background))] text-blue-900 overflow-x-hidden">
      <RosaryPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center z-10">
        <div className="max-w-md w-full">
          <Card className="bg-white/80 backdrop-blur-sm p-6 md:p-8 rounded-xl shadow-2xl border border-blue-200">
            <CardContent className="space-y-6 text-blue-950">
              <h1 className="text-xl md:text-2xl font-bold text-center text-blue-800">
                Você se compromete a escutar essa oração com fé e respeito, caso ela seja revelada para você agora?
              </h1>
              <div className="space-y-4">
                {quizOptions.map((option, index) => (
                  <Link href={`/osegredovaticano/loading?name=${encodeURIComponent(name || '')}`} key={index} className="block w-full">
                    <Button
                      size="lg"
                      variant="outline"
                      className="w-full bg-white/50 hover:bg-white/90 border-blue-300 text-blue-800 font-semibold h-auto py-3 text-base justify-center whitespace-normal text-center"
                    >
                      <span className="flex-1">{option.text}</span>
                    </Button>
                  </Link>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/osegredovaticano/quiz6/page.tsx

// ====================================================================================================

// FILE: src/app/page.tsx
import { HeroSection } from '@/components/landing/hero-section';
import { VSLSection } from '@/components/landing/vsl-section';
import { TestimonialsSection } from '@/components/landing/testimonials-section';
import { Footer } from '@/components/landing/footer';
import { BackgroundPattern } from '@/components/landing/background-pattern';

export default function Home() {
  return (
    <div className="relative flex flex-col min-h-screen bg-background text-foreground overflow-x-hidden">
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12">
        <HeroSection />
        <VSLSection />
        <TestimonialsSection />
      </main>
      <Footer />
    </div>
  );
}
// END FILE: src/app/page.tsx

// ====================================================================================================

// FILE: src/app/santoantonio/layout.tsx
import '../globals.css';

export default function SantoAntonioLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return <>{children}</>;
}
// END FILE: src/app/santoantonio/layout.tsx

// ====================================================================================================

// FILE: src/app/santoantonio/page.tsx
'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import { Menu, Search, Smile, UserCircle } from 'lucide-react';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';

type ChatMessageData = {
  name: string;
  message: string;
  isSupport?: boolean;
  avatarUrl?: string;
  avatarHint?: string;
};

const allChatMessages: ChatMessageData[] = [
  { name: 'Roberto Silva', message: 'Que Deus abençoe a todos! 🙏 Em nome de jesus', avatarUrl: 'https://thumbs2.imgbox.com/14/e9/DUPvPss9_t.jpg', avatarHint: 'man portrait' },
  { name: 'Carla Fernandes', message: 'Cheguei agora, o que tá acontecendo? Já começou?', avatarUrl: 'https://thumbs2.imgbox.com/dd/55/H0rZXQVM_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Ediene Silva', message: 'ó Jesus e Maria fortalece minha vida e a de João Batista na união vinda de vós pelo espírito santo amém' },
  { name: 'Terezinha Souza', message: 'Amém, meu Deus! Só Tu és fiel ❤️', avatarUrl: 'https://thumbs2.imgbox.com/3d/ae/bHEFsuqi_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Sueli Andrade', message: 'Nossa, entrei bem na hora da oração… Graças a Deus 😇😇' },
  { name: 'André Luiz', message: 'Deus é maravilhoso! Amém 🙌', avatarUrl: 'https://thumbs2.imgbox.com/7b/b0/gsYWvBdF_t.jpg', avatarHint: 'man portrait' },
  { name: 'Paulo César', message: 'Santo Antônio, guia nossos passos!' },
  { name: 'Vera Lúcia', message: 'Abençoa, Senhor, cada família conectada nessa live 🙌🙌🙌' },
  { name: 'Iracema Nogueira', message: '❤️❤️❤️❤️❤️' },
  { name: 'Claudete Ferreira', message: 'Amén!! 🙏🙏🙏' },
  { name: 'Gilberto Lima', message: 'Poxa interessante uma Oração de 800 anos? Só pode ser de Deus mesmo' },
  { name: 'Regina Célia', message: 'Glória a Ti, Senhor! Estamos prontos 🙏', avatarUrl: 'https://thumbs2.imgbox.com/65/6a/L5JO7ilQ_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Marta de Jesus', message: 'Comecei a assistir agora… alguém já usou essa oração?' },
  { name: 'Eliane Ramos', message: '🙏🙏🙏' },
  { name: 'Equipe de Suporte', message: 'Sim, Marta! Milhares de pessoas já estão relatando curas, bênçãos financeiras e restauração familiar com essa Oração de 7 minutos de Santo Antônio. 🙌📿', isSupport: true },
  { name: 'Joana Lima', message: 'Amém, glória a Deus!', avatarUrl: 'https://thumbs2.imgbox.com/87/54/0dMM6ESV_t.png', avatarHint: 'woman portrait' },
  { name: 'Neide Souza', message: 'Amém, amém, amém!!!' },
  { name: 'Paulo Vieira', message: '😇😇😇😇😇😇', avatarUrl: 'https://thumbs2.imgbox.com/48/18/9JtnHEjz_t.png', avatarHint: 'man portrait' },
  { name: 'Ana Paula', message: 'Amém 🙏 Deus é fiel' },
  { name: 'Adriana Gomes', message: 'Aleluia!!' },
  { name: 'Jacinta Feitosa', message: 'Bom dia peço oração pela minha família, minha filha, meu esposo e a mim. Principalmente pela conversão do meu esposo, livrai-nos de todos os perigos. E que o Espírito Santo esteja conosco.' },
  { name: 'Maria Rita', message: 'Aqui é a Maria Rita de Aparecida - SP. Peço oração para quitar 80 mil em dívidas de cartão de crédito e para abençoar os estudos dos netos…' },
  { name: 'Severiana Amorim', message: 'peço orações pela minha família' },
  { name: 'Cláudio Teixeira', message: 'Santo Antônio, me ajuda a pagar meu aluguel esse mês.' },
  { name: 'Lucas Bernardes', message: 'Sou de Goiânia. Posso pedir oração pelo meu negócio?', avatarUrl: 'https://thumbs2.imgbox.com/72/dc/GT3YxWwY_t.jpg', avatarHint: 'man portrait' },
  { name: 'Marta Helena', message: 'Alguém mais sentindo uma paz diferente nesse momento?', avatarUrl: 'https://thumbs2.imgbox.com/da/67/ajSKP3eY_t.jpg', avatarHint: 'woman portrait' },
  { name: 'Adriana Lins', message: 'Amados irmãos, vamos orar com fé 🙏' },
  { name: 'Alex Rodrigues', message: 'A minha família é uma benção...' },
  { name: 'Gerson Oliveira', message: 'Essa live vai ficar salva depois? Quero mandar pra minha mãe.' },
  { name: 'José da Silva', message: 'Sou o José da Silva de Fortaleza. peço uma bênção de um emprego para tirar a família das dificuldades e realizar o sonho da casa própria…' },
  { name: 'Henrique', message: 'Deus abençoe minha família, abre as portas de trabalho pra minha irmã Joyce.' },
  { name: 'Sérgio Lima', message: 'Esse canal é novo? Como nunca vi isso antes? Que benção🙏' },
  { name: 'Ivone Oliveira', message: 'Meu Senhor e Meu Deus,rezo hoje por todas as minhas intenções e por todos os que me pedem orações....' },
  { name: 'Tiene Delvalles', message: 'pela saúde de meus filos' },
  { name: 'Edhite Souza', message: 'Orações em ação de graças pela paz do mundo inteiro. 🙏' },
  { name: 'Rosana Oliveira', message: 'Peço orações pela cura da minha mãe que se encontra hospitalizada em estado grave🥺JESUS EU CREI MAS AUMENTA A MINHA FÉ 😭😭😭', avatarUrl: 'https://thumbs2.imgbox.com/eb/cb/zfODzSUu_t.png', avatarHint: 'woman portrait' },
  { name: 'Márcia Cardoso', message: 'Padre, sou a Márcia de BH. Peço oração pelo meu casamento e pelas minhas dores nas juntas e problemas de diabetes…' },
  { name: 'Margarida Maria', message: 'Padre peço sua benção pra minha familia pela converssão de todos.❤️' },
  { name: 'Beatriz Santos', message: 'pela cirurgia do coração da minha netinha Ária. Jesus eu confio em vós. 🙏🙏🙏🙏' },
  { name: 'Denize Michelle', message: 'Pelo meu matrimônio, meus filhos' },
  { name: 'Semirames', message: 'Rezo pela minha vida profissional, que Deus faça o melhor por mim.' },
  { name: 'Sandra', message: 'Padre, peça a Santo Antônio pra trazer meu marido de volta… ele saiu de casa faz 2 meses 😢' },
  { name: 'Carlos Eduardo', message: 'Ore pela minha mãe, Padre… ela está lutando contra um câncer e precisa de forças 🙏📿', avatarUrl: 'https://thumbs2.imgbox.com/c3/9d/Qq4PQmYc_t.jpg', avatarHint: 'man portrait' },
  { name: 'Dona Terezinha', message: 'Peço oração pela minha filha que está com depressão… que Deus cure o coração dela 🙏' },
  { name: 'Cida Ramos', message: 'Amém! Que bênção 🙏' },
  { name: 'Elis Regina', message: 'A-M-É-M 🙌' },
  { name: 'Moisés Ribeiro', message: '59 mil pessoas e todas unidas em oração… é emocionante.' },
  { name: 'Marenilde Sousa', message: 'rezo pela minha família, pelos meus filhos, pela minha vida espiritual, financeira, sentimental e física' },
  { name: 'Luciana Mendes', message: 'Só pode ser algo muito poderoso mesmo' },
  { name: 'Roberto Carvalho', message: 'Acabei de pesquisar no Google, é realmente não tem anda parecido! que interessante Gloria a Deus' },
  { name: 'Delvita Silva', message: 'peço oração pela minha mãe que fez 103 anos' },
  { name: 'Eduardo Félix', message: 'Essa oração que tá sendo estudada pela Nasa? 😳' },
  { name: 'Aline Torres', message: 'COMO ASSIM a NASA tá estudando uma oração??? Serioo! 😳' },
  { name: 'Nogueira', message: '🙏🙏🙏🙏🫨🫨🫨' },
  { name: 'Gabriel Diniz', message: 'Uau! Não sabia que até os cientistas estão estudando isso.❤️' },
  { name: 'Cintia Barreto', message: 'Nunca ouvi nada parecido. Estou impactada.' },
  { name: 'Carlos Eduardo', message: 'Cientistas ateus confirmando??? Deus mostrando que é real!' },
  { name: 'Cristiane Luz', message: 'Isso é profético! 🙌' },
  { name: 'Valdirene Costa', message: '2000 anos? Só pode ser de Deus mesmo!' },
  { name: 'Everton Gomes', message: 'Agora faz sentido tudo que tenho vivido ultimamente' },
  { name: 'Cida Reis', message: 'Misericórdia Senhor de todos nós vossos filhos e filhas.' },
  { name: 'Douglas Ramos', message: 'Meu espírito confirma… isso é muito sério.' },
  { name: 'Gilsandra de Oliveira', message: 'Obrigada, Deus 🙏🙏🙏' },
  { name: 'Vania Lucia', message: 'SALVA o BRASIL Senhor JESUS 🙏🏻🙏🏻🙏🏻🇧🇷' },
  { name: 'Priscila', message: '🙌🙌🙌' },
  { name: 'Denise Rocha', message: 'Não é à toa que a Maçonaria escondeu isso' },
  { name: 'Heloísa Cardoso', message: 'Deus escolheu o momento certo pra revelar isso' },
  { name: 'Paulo G.', message: 'Eu sabia que os maçons escondiam algo secreto...' },
  { name: 'Lívia Santos', message: 'Então é isso que os judeus usam há séculos pra atrair riqueza? 😮✨' },
  { name: 'Ruth Cardoso', message: 'Eu sabia que o Neymar tinha esses segredinhos' },
  { name: 'Carlos M.', message: 'Luciano Huck?? Nunca imaginei ele envolvido nisso 😳' },
  { name: 'Patrícia Gomes', message: 'Se isso ajudou até Davi e Salomão… 🙌 já quero ouvir essa oração!' },
  { name: 'Cláudia Lima', message: 'Eu prometo usar essa oração pra ajudar minha família toda ❤️❤️' },
  { name: 'Tiene Delvalles', message: 'Meu Deus quanto famosos estão usando essa benção!!' },
  { name: 'Elizângela F.', message: 'Não é justo! A gente ralando todo dia e eles com esse segredo guardado Graças a Deus o Padre esta mostrado para a gente' },
  { name: 'Camila Andrade', message: 'Sinto que essa live vai mudar minha vida. Estou aqui por um propósito divino! Gloria a Deus ❤️' },
  { name: 'Fernanda Salomão', message: 'Obrigada por ter coragem de falar isso, padre! 🕊️' },
  { name: 'João Batista', message: 'Tô curioso… nunca vi o Padre assim tão sério 🙏' },
  { name: 'Carmem Lúcia', message: 'Gente, segura a emoção… lá vem bênção forte!' },
  { name: 'Mônica Vieira', message: 'Alguém mais tá com o coração batendo forte?' },
  { name: 'Paulo Sérgio', message: 'Algo me diz que isso vai mudar tudo… 🙌' },
  { name: 'Vera Lima', message: 'Que testemunhos lindos 🕊️😭' },
  { name: 'Eduardo Lima', message: 'Essa oração precisa ser espalhada pro mundo! Que coisa linda 😭' },
  { name: 'Renata Campos', message: 'Isso não tem como ser coincidência. É Deus!' },
  { name: 'Carlos Junior', message: 'quero esse milagre tbm 🙏' },
  { name: 'Tânia Rocha', message: 'Padre, como faço pra ouvir a oração todo dia?' },
  { name: 'Luciana Dantas', message: 'Amo vender doces também! Vou começar a fazer essa oração amanhã cedo' },
  { name: 'Carla Montes', message: 'Amém!! 🙏❤️' },
  { name: 'Cícera Maria', message: 'A fé move montanhas! Já tô com lágrimas nos olhos 😭' },
  { name: 'Tainá Moura', message: 'Chorei aqui… o milagre do casamento restaurado me pegou 😭' },
  { name: 'Francisco Silva', message: 'Amém Jesus! Que bênção ouvir esses relatos 🙏' },
  { name: 'Neide Rodrigues', message: 'Amém! Que oração maravilhosa, quero escutar ouvi-la!' },
  { name: 'Denise F.', message: 'Essa oração veio direto do céu!' },
  { name: 'Luciana Prado', message: 'Glória a Deus pela cura, padre! 🙏' },
  { name: 'Dona Nai', message: 'Eu também sinto dores fortes na coluna, vou fazer essa oração com fé! 😢' },
  { name: 'Vanessa Ribeiro', message: 'Gente, o padre tá falando que vai mudar tudo o que sabemos sobre milagres… Tô arrepiada 🙏' },
  { name: 'João Batista', message: 'Não conhecia o Padre Fernando, mas já senti uma paz só de ouvir ele 🙌' },
  { name: 'Gabriel Nogueira', message: 'Isso aqui tá diferente… não é live comum não. É coisa divina mesmo 🙏' },
  { name: 'Patrícia Silveira', message: 'Padre, é verdade que a oração funciona até pra quem tá afastado da fé? 😢' },
];

const ChatMessage = ({ name, message, avatarUrl, avatarHint, isSupport = false }: ChatMessageData) => (
  <div className="flex items-start gap-2 p-2 hover:bg-gray-200/50 rounded-md">
    <Avatar className="h-6 w-6">
      {avatarUrl ? <AvatarImage src={avatarUrl} alt={name} data-ai-hint={avatarHint} /> : <AvatarFallback className="bg-neutral-300 text-black text-xs">{name.charAt(0)}</AvatarFallback>}
    </Avatar>
    <div className="flex-1">
      <span className={`text-sm font-semibold ${isSupport ? 'text-yellow-500' : 'text-neutral-500'}`}>{name}</span>
      <p className="text-sm text-black break-words">{message}</p>
    </div>
  </div>
);

const BuyButton = () => {
  const [show, setShow] = useState(false);

  useEffect(() => {
    // Show after 36 minutes and 38 seconds
    const timer = setTimeout(() => {
      setShow(true);
    }, (36 * 60 + 38) * 1000); 

    return () => clearTimeout(timer);
  }, []);

  const handleBuyClick = () => {
    window.open('https://pay.kirvano.com/42887aa4-262c-435e-b91c-42a8f8f4d849', '_self');
  };
  
  if (!show) {
    return null;
  }

  return (
    <Button
      size="lg"
      className="bg-green-600 hover:bg-green-700 text-white font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal w-full max-w-lg mx-auto"
      onClick={handleBuyClick}
    >
      EU QUERO ESSAS ORAÇÕES
    </Button>
  );
};

export default function SantoAntonioPage() {
  const [viewerCount] = useState(55452);
  const [liveTime, setLiveTime] = useState('');

  useEffect(() => {
    const now = new Date();
    const time = now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
    const date = now.toLocaleDateString('pt-BR');
    setLiveTime(`às ${time}, ${date}`);
  }, []);
  
  useEffect(() => {
    const scriptId = "vturb-player-script-6863f7c5ec24f4447b69eed2";
    if (document.getElementById(scriptId)) return;

    const script = document.createElement("script");
    script.id = scriptId;
    script.src = "https://scripts.converteai.net/ba88e257-ee82-4efe-bc55-87bc87882ad1/players/6863f7c5ec24f4447b69eed2/v4/player.js";
    script.async = true;
    document.head.appendChild(script);

    return () => {
      const existingScript = document.getElementById(scriptId);
      if (existingScript && existingScript.parentNode) {
        existingScript.parentNode.removeChild(existingScript);
      }
    };
  }, []);

  return (
    <div className="bg-white text-black font-sans">
      <header className="flex items-center justify-between px-4 py-2 bg-white border-b border-neutral-200 z-10 sticky top-0 shrink-0">
        <div className="flex items-center gap-4 shrink-0">
          <Menu className="h-6 w-6 text-neutral-800" />
          <Image
            src="https://classic.exame.com/wp-content/uploads/2017/08/new-youtube-logo-840x402.jpg"
            alt="YouTube Logo"
            width={90}
            height={20}
            className="object-contain"
            data-ai-hint="youtube logo"
          />
        </div>
        <div className="hidden sm:flex flex-1 justify-center px-4">
          <div className="w-full max-w-lg flex">
            <Input
              placeholder="Pesquisar"
              className="bg-white border-neutral-300 rounded-l-full rounded-r-none h-10 px-4 flex-1 focus:ring-1 focus:ring-blue-500 border-r-0"
            />
            <Button variant="secondary" className="bg-white hover:bg-gray-100 rounded-r-full rounded-l-none h-10 px-6 border border-neutral-300 border-l-0">
              <Search className="h-5 w-5" />
            </Button>
          </div>
        </div>
        <div className="flex items-center gap-4 shrink-0">
          <Search className="h-6 w-6 text-neutral-800 sm:hidden" />
          <UserCircle className="h-8 w-8 text-neutral-800" />
        </div>
      </header>

      <main className="grid grid-cols-1 lg:grid-cols-[1fr_402px]">
        {/* Video and Info Section */}
        <div className="flex flex-col px-4 lg:px-6 py-4">
          <div
            id="video-container"
            className="relative w-full bg-black aspect-video"
          >
            <div dangerouslySetInnerHTML={{ __html: `<vturb-smartplayer id="vid-6863f7c5ec24f4447b69eed2" style="display: block; margin: 0 auto; width: 100%; "></vturb-smartplayer>` }} />
          </div>
          
          <div className="mt-8 text-center">
            <BuyButton />
          </div>

          <div className="mt-4">
            <h1 className="text-xl font-bold mb-1 break-words">
              Padre Fernando Lisboa | A oração de Santo Antônio escondida pela Maçonaria por mais de 800 anos que tem trazido milagres a mais de 59 mil pessoas | Live Ao Vivo {liveTime && `${liveTime}.`}
            </h1>
            <div className="text-sm text-neutral-600 mb-4">
              <span className="font-bold">{viewerCount.toLocaleString('pt-BR')} assistindo agora</span>
            </div>
            <div className="flex items-center justify-between flex-wrap gap-4">
              <div className="flex items-center gap-3">
                <Avatar>
                  <AvatarImage src="https://xn--oraaosecreta-mdb.site/live/images/osa_foto_perfil_padre.webp" alt="Fernando Lisboa" />
                  <AvatarFallback>FL</AvatarFallback>
                </Avatar>
                <div>
                  <p className="font-semibold">Fernando Lisboa</p>
                  <p className="text-sm text-neutral-600">96 mil inscritos</p>
                </div>
              </div>
              <Button className="bg-black text-white font-semibold hover:bg-neutral-800 rounded-full">
                Inscrever-se
              </Button>
            </div>
          </div>
        </div>

        {/* Chat Section */}
        <div className="w-full border-t lg:border-t-0 lg:border-l flex flex-col">
          <div className="p-4 border-b shrink-0">
            <h2 className="font-bold">Live chat</h2>
          </div>
          <div className="flex-1 p-2">
            <div className="flex flex-col gap-2">
              {allChatMessages.map((msg, index) => (
                <ChatMessage key={index} {...msg} />
              ))}
            </div>
          </div>
          <div className="p-4 border-t bg-white shrink-0">
            <div className="relative">
              <Input
                placeholder="Chat..."
                className="bg-white border-neutral-300 rounded-full h-10 pl-4 pr-10"
                disabled
              />
              <Smile className="absolute right-3 top-1/2 -translate-y-1/2 h-5 w-5 text-neutral-500" />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}
// END FILE: src/app/santoantonio/page.tsx

// ====================================================================================================

// FILE: src/app/upsell/page.tsx
'use client';

import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Footer } from '@/components/landing/footer';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import Image from 'next/image';
import { Check } from 'lucide-react';

export default function UpsellPage() {
  const handlePadrePioCheckout = () => {
    window.open('https://pay.kirvano.com/859e54be-95a0-4243-96cd-5dd7043097e0', '_self');
  };

  const handleVaticanoCheckout = () => {
    window.open('https://pay.kirvano.com/87004489-1ca3-49fc-a8fc-002952f0dcde', '_self');
  };

  const handleGuiaCheckout = () => {
    window.open('https://pay.kirvano.com/ee21dbf6-05a6-469e-bde5-7a9efd90c6b6', '_self');
  };

  const handleAllThreeCheckout = () => {
    window.open('https://pay.kirvano.com/64053a4f-201b-4e23-b7a5-0e2a9b60f8e7', '_self');
  };

  const handleUpsellDecline = () => {
    // TODO: Adicione aqui o link para a página de obrigado ou próxima etapa
    console.log('Upsell recusado.');
    window.open('/obrigado', '_self');
  };

  return (
    <div className="dark relative flex flex-col min-h-screen bg-background text-foreground overflow-x-hidden">
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12 flex flex-col items-center justify-center text-center">
        <div className="max-w-5xl w-full">
            <h1 className="text-2xl md:text-4xl font-bold text-primary animate-pulse mb-4">
              ESPERE! SUAS BENÇÃOS AINDA NÃO ACABARAM...
            </h1>
            <p className="text-lg md:text-xl text-foreground/80 mb-10">
              Antes de ir, temos uma oferta única e exclusiva para você.
            </p>

            <div className="grid md:grid-cols-3 gap-8 mb-10">
              <Card className="bg-card shadow-lg flex flex-col border-2 border-primary">
                <CardHeader>
                  <Image src="https://i.imgur.com/F8d7Dym.png" alt="Card 1" width={600} height={400} className="rounded-t-lg" data-ai-hint="glowing book" />
                  <CardTitle className="pt-4">A biografia de Padre Pio</CardTitle>
                </CardHeader>
                <CardContent className="flex-grow flex flex-col justify-between">
                  <div>
                    <p className="mb-2">Conheça a história desse abençoado Padre</p>
                    <p className="mb-4 font-bold text-lg">
                        <span className="line-through text-destructive">De R$47,00</span> por <span className="text-green-600">R$19,90</span>
                    </p>
                  </div>
                  <Button onClick={handlePadrePioCheckout} className="w-full mt-auto bg-green-600 hover:bg-green-700 text-white animate-pulse">Comprar Agora</Button>
                </CardContent>
              </Card>
              <Card className="bg-card shadow-lg flex flex-col border-2 border-primary">
                <CardHeader>
                  <Image src="https://i.imgur.com/vh5FHgl.png" alt="Card 2" width={600} height={400} className="rounded-t-lg" data-ai-hint="shining cross" />
                  <CardTitle className="pt-4">Os segredos do Vaticano revelados</CardTitle>
                </CardHeader>
                <CardContent className="flex-grow flex flex-col justify-between">
                  <div>
                    <p className="mb-2">DESCUBRA tudo que eles escondem de você</p>
                    <p className="mb-4 font-bold text-lg">
                        <span className="line-through text-destructive">De R$47,00</span> por <span className="text-green-600">R$19,90</span>
                    </p>
                  </div>
                  <Button onClick={handleVaticanoCheckout} className="w-full mt-auto bg-green-600 hover:bg-green-700 text-white animate-pulse">Comprar Agora</Button>
                </CardContent>
              </Card>
              <Card className="bg-card shadow-lg flex flex-col border-2 border-primary">
                <CardHeader>
                  <Image src="https://i.imgur.com/Ka1k6li.png" alt="Card 3" width={600} height={400} className="rounded-t-lg" data-ai-hint="bible open" />
                  <CardTitle className="pt-4">Guia de versículos bíblicos poderosos</CardTitle>
                </CardHeader>
                <CardContent className="flex-grow flex flex-col justify-between">
                    <div>
                        <p className="mb-2">Esse guia tem um versículo para cada situação da sua vida que está passando</p>
                        <p className="mb-4 font-bold text-lg">
                            <span className="line-through text-destructive">De R$47,00</span> por <span className="text-green-600">R$19,90</span>
                        </p>
                    </div>
                   <Button onClick={handleGuiaCheckout} className="w-full mt-auto bg-green-600 hover:bg-green-700 text-white animate-pulse">Comprar Agora</Button>
                </CardContent>
              </Card>
            </div>
            
            <div className="mt-10 mb-10 text-center">
                <Button 
                    onClick={handleAllThreeCheckout} 
                    size="lg"
                    className="w-full max-w-2xl mx-auto bg-green-600 hover:bg-green-700 text-white animate-pulse font-bold h-auto py-4 text-base md:text-lg md:py-6 whitespace-normal"
                >
                    APROVEITE ESSA OFERTA OS 3 POR APENAS R$ 37,00
                </Button>
            </div>
        </div>
      </main>
      <Footer />
    </div>
  );
}
// END FILE: src/app/upsell/page.tsx

// ====================================================================================================

// FILE: src/app/vaticano/page.tsx
import { HeroSectionNova } from '@/components/landing/hero-section-nova';
import { VSLSectionNova } from '@/components/landing/vsl-section-nova';
import { TestimonialsSection } from '@/components/landing/testimonials-section';
import { Footer } from '@/components/landing/footer';
import { BackgroundPattern } from '@/components/landing/background-pattern';
import { SalesPopup } from '@/components/landing/sales-popup';
import { TopBanner } from '@/components/landing/top-banner';
import type { Metadata } from 'next';

export const metadata: Metadata = {
  title: 'O Segredo do Vaticano - Orações Secretas',
  description: 'Descubra as orações secretas guardadas nos arquivos do Vaticano.',
};

export const dynamic = 'force-dynamic';

export default function VaticanoPage() {
  return (
    <div className="dark relative flex flex-col min-h-screen bg-background text-foreground overflow-x-hidden">
      <TopBanner />
      <BackgroundPattern />
      <main className="flex-grow container mx-auto px-4 py-8 md:py-12">
        <HeroSectionNova />
        <VSLSectionNova />
        <TestimonialsSection />
      </main>
      <Footer />
      <SalesPopup />
    </div>
  );
}
// END FILE: src/app/vaticano/page.tsx

// ====================================================================================================

// FILE: src/components/disable-devtools.tsx
'use client';

import { useEffect } from 'react';

export function DisableDevTools() {
  useEffect(() => {
    const handleContextMenu = (e: MouseEvent) => {
      e.preventDefault();
    };

    const handleKeyDown = (e: KeyboardEvent) => {
      // Disable F12
      if (e.key === 'F12') {
        e.preventDefault();
      }
      // Disable Ctrl+Shift+I
      if (e.ctrlKey && e.shiftKey && (e.key === 'I' || e.key === 'i')) {
        e.preventDefault();
      }
      // Disable Ctrl+Shift+J
      if (e.ctrlKey && e.shiftKey && (e.key === 'J' || e.key === 'j')) {
        e.preventDefault();
      }
      // Disable Ctrl+U
      if (e.ctrlKey && (e.key === 'U' || e.key === 'u')) {
        e.preventDefault();
      }
      // Disable Ctrl+S
      if (e.ctrlKey && (e.key === 'S' || e.key === 's')) {
         e.preventDefault();
      }
    };
    
    document.addEventListener('contextmenu', handleContextMenu);
    document.addEventListener('keydown', handleKeyDown);

    return () => {
      document.removeEventListener('contextmenu', handleContextMenu);
      document.removeEventListener('keydown', handleKeyDown);
    };
  }, []);

  return null;
}
// END FILE: src/components/disable-devtools.tsx

// ====================================================================================================

// FILE: src/components/landing/background-pattern.tsx
import { RosaryIcon } from './rosary-icon';
import { OurLadyIcon } from './our-lady-icon';

export function BackgroundPattern() {
  return (
    <div className="absolute inset-0 z-0 opacity-[0.03] text-foreground pointer-events-none">
      <RosaryIcon className="absolute top-[5%] left-[10%] w-24 h-24 transform -rotate-12" />
      <OurLadyIcon className="absolute top-[15%] right-[5%] w-32 h-32 transform rotate-6" />
      <RosaryIcon className="absolute top-[40%] left-[20%] w-20 h-20 transform rotate-12" />
      <OurLadyIcon className="absolute top-[55%] right-[15%] w-28 h-28 transform -rotate-6" />
      <OurLadyIcon className="absolute bottom-[10%] left-[5%] w-40 h-40 transform rotate-15" />
      <RosaryIcon className="absolute bottom-[2%] right-[25%] w-24 h-24 transform -rotate-15" />
      <OurLadyIcon className="absolute top-[50%] left-[45%] w-16 h-16 transform -rotate-20" />
      <RosaryIcon className="absolute top-[5%] right-[35%] w-16 h-16 transform rotate-45" />
    </div>
  );
}
// END FILE: src/components/landing/background-pattern.tsx

// ====================================================================================================

// FILE: src/components/landing/buy-button-arcanjomiguel.tsx
'use client';

import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';

export function BuyButtonArcanjoMiguel() {
  const [showBuyButton, setShowBuyButton] = useState(false);

  useEffect(() => {
    const timer = setTimeout(() => {
      setShowBuyButton(true);
    }, (13 * 60 + 35) * 1000); // 13 minutes and 35 seconds

    return () => clearTimeout(timer);
  }, []);

  const handleBuyClick = () => {
    window.open('https://pay.kirvano.com/6d4a8c2c-5933-4ec4-a873-585f75d81a8b', '_self');
  };

  if (!showBuyButton) {
    // Reserve space to prevent layout shift
    return <div className="h-[76px] md:h-[92px]" />;
  }
  
  return (
    <Button
      size="lg"
      className="font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal"
      onClick={handleBuyClick}
    >
      QUERO RECEBER MINHAS ORAÇÕES AGORA
    </Button>
  );
}
// END FILE: src/components/landing/buy-button-arcanjomiguel.tsx

// ====================================================================================================

// FILE: src/components/landing/buy-button-cancaonova.tsx
'use client';

import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';

export function BuyButtonCancaoNova() {
  const [showBuyButton, setShowBuyButton] = useState(false);

  useEffect(() => {
    // Show after 15 minutes
    const timer = setTimeout(() => {
      setShowBuyButton(true);
    }, (15 * 60) * 1000);

    return () => clearTimeout(timer);
  }, []);

  const handleBuyClick = () => {
    // Placeholder link
    window.open('https://pay.kirvano.com/80aac1c2-c705-436a-a44e-36aa62049297', '_self');
  };

  if (!showBuyButton) {
    // Reserve space to prevent layout shift
    return <div className="h-[76px] md:h-[92px]" />;
  }
  
  return (
    <Button
      size="lg"
      className="font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal"
      onClick={handleBuyClick}
    >
      QUERO OUVIR AS ORAÇÕES CANTADAS
    </Button>
  );
}
// END FILE: src/components/landing/buy-button-cancaonova.tsx

// ====================================================================================================

// FILE: src/components/landing/footer.tsx
import Link from "next/link";

export function Footer() {
  return (
    <footer className="bg-secondary/50 py-8 mt-16">
      <div className="container mx-auto px-4 text-center text-muted-foreground">
        <div className="flex flex-wrap justify-center items-center gap-x-4 gap-y-2 md:gap-x-6 text-sm mb-4">
          <Link href="#" className="hover:text-foreground transition-colors">Termos de Uso</Link>
          <Link href="#" className="hover:text-foreground transition-colors">Política de Privacidade</Link>
          <Link href="#" className="hover:text-foreground transition-colors">Política de Devolução</Link>
        </div>
        <p className="text-xs">
          ©︎ 2025 Orações Secretas. Todos os direitos reservados.
        </p>
      </div>
    </footer>
  );
}
// END FILE: src/components/landing/footer.tsx

// ====================================================================================================

// FILE: src/components/landing/hero-section-arcanjomiguel.tsx
import { Card } from "@/components/ui/card";
import { Check } from 'lucide-react';

export function HeroSectionArcanjoMiguel() {
  return (
    <section className="flex flex-col items-center text-center mb-12 md:mb-20">
      <Card className="bg-accent text-accent-foreground p-4 md:p-6 rounded-xl shadow-lg mb-8 max-w-4xl w-full">
        <h1 className="font-headline text-xl sm:text-2xl md:text-3xl font-bold uppercase leading-tight">
          40 ORAÇÕES SECRETAS: PESSOAS CHORAM AO OUVIR AS ORAÇÕES POR ALGUNS SEGUNDOS E SENTIREM O TOQUE DO <span className="text-primary">ARCANJO MIGUEL</span>
        </h1>
      </Card>

      <ul className="space-y-3 text-md md:text-lg text-foreground/90 max-w-3xl font-medium mt-6 text-left">
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>Frei Gilson ouviu e traduziu as orações.</span>
        </li>
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>Essas orações estavam guardadas a 7 chaves dentro de arquivos secretos do Vaticano.</span>
        </li>
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>Mas hoje você pode acessá-las e sentir a proteção do Arcanjo Miguel agir em sua vida.</span>
        </li>
      </ul>
      
      <p className="mt-8 text-primary font-bold uppercase tracking-wider animate-pulse md:text-lg">
        VEJA O VÍDEO
      </p>
    </section>
  );
}
// END FILE: src/components/landing/hero-section-arcanjomiguel.tsx

// ====================================================================================================

// FILE: src/components/landing/hero-section-cancaonova.tsx
import { Card } from "@/components/ui/card";
import { Check, Music } from 'lucide-react';

export function HeroSectionCancaoNova() {
  return (
    <section className="flex flex-col items-center text-center mb-12 md:mb-20">
      <Card className="bg-accent text-accent-foreground p-4 md:p-6 rounded-xl shadow-lg mb-8 max-w-4xl w-full">
        <h1 className="font-headline text-xl sm:text-2xl md:text-3xl font-bold uppercase leading-tight flex items-center justify-center gap-4">
          <Music className="h-8 w-8 sm:h-10 sm:w-10 shrink-0" />
          <span>
            AS ORAÇÕES CANTADAS DA CANÇÃO NOVA QUE TOCAM A ALMA
          </span>
        </h1>
      </Card>

      <ul className="space-y-3 text-md md:text-lg text-foreground/90 max-w-3xl font-medium mt-6 text-left">
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>Canções de cura e libertação inspiradas por Deus.</span>
        </li>
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>Sinta a presença do Espírito Santo através de melodias abençoadas.</span>
        </li>
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>Orações em forma de música para fortalecer sua fé e trazer paz ao seu coração.</span>
        </li>
      </ul>
      
      <p className="mt-8 text-primary font-bold uppercase tracking-wider animate-pulse md:text-lg">
        VEJA O VÍDEO
      </p>
    </section>
  );
}
// END FILE: src/components/landing/hero-section-cancaonova.tsx

// ====================================================================================================

// FILE: src/components/landing/hero-section-nova.tsx
import { Card } from "@/components/ui/card";
import { Landmark, Check } from 'lucide-react';

export function HeroSectionNova() {
  return (
    <section className="flex flex-col items-center text-center mb-12 md:mb-20">
      <Card className="bg-accent text-accent-foreground p-3 md:p-4 rounded-xl shadow-lg mb-8 max-w-3xl w-full">
        <h1 className="font-headline text-xl sm:text-2xl md:text-3xl font-bold flex items-center justify-center gap-3 md:gap-4">
          <Landmark className="h-8 w-8 sm:h-10 sm:w-10 shrink-0" />
          <span>
            OS SEGREDOS QUE O VATICANO NÃO QUER QUE VOCÊ SAIBA
          </span>
        </h1>
      </Card>
      
      <ul className="space-y-3 text-md md:text-lg text-foreground/90 max-w-3xl font-medium mt-6 text-left">
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>Revelações inéditas sobre os bastidores da Igreja</span>
        </li>
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>Documentos secretos e fatos ocultos por séculos</span>
        </li>
        <li className="flex items-start gap-3">
          <Check className="h-6 w-6 text-primary shrink-0 mt-1" />
          <span>O que o Vaticano não quer que você descubra... até agora!</span>
        </li>
      </ul>

      <p className="mt-8 text-primary font-bold uppercase tracking-wider animate-pulse md:text-lg">
        VEJA O VÍDEO
      </p>
    </section>
  );
}
// END FILE: src/components/landing/hero-section-nova.tsx

// ====================================================================================================

// FILE: src/components/landing/hero-section.tsx
import { Card } from "@/components/ui/card";
import { BookOpen } from 'lucide-react';

export function HeroSection() {
  return (
    <section className="flex flex-col items-center text-center mb-12 md:mb-20">
      <Card className="bg-accent text-accent-foreground p-2 md:p-4 rounded-xl shadow-lg mb-8 max-w-2xl w-full">
        <h1 className="font-headline text-lg sm:text-2xl md:text-4xl font-bold uppercase tracking-wide flex items-center justify-center gap-2 md:gap-3">
          <BookOpen className="h-6 w-6 sm:h-8 sm:w-8 md:h-10 md:w-10" />
          <span className="whitespace-nowrap">Orações Secretas</span>
        </h1>
      </Card>
      <h2 className="font-headline text-xl md:text-3xl font-bold max-w-3xl">
        Hoje pode ser o dia da sua vitória: descubra as orações secretas para restaurar sua saúde e sua vida
      </h2>
      <p className="mt-4 text-primary font-bold uppercase tracking-wider animate-pulse md:text-lg">
        VEJA O VÍDEO
      </p>
    </section>
  );
}
// END FILE: src/components/landing/hero-section.tsx

// ====================================================================================================

// FILE: src/components/landing/offer-section.tsx
'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Timer } from 'lucide-react';

export function OfferSection() {
  const [timeLeft, setTimeLeft] = useState(10 * 60);

  useEffect(() => {
    if (timeLeft <= 0) return;

    const intervalId = setInterval(() => {
      setTimeLeft((prevTime) => prevTime - 1);
    }, 1000);

    return () => clearInterval(intervalId);
  }, [timeLeft]);

  const minutes = String(Math.floor(timeLeft / 60)).padStart(2, '0');
  const seconds = String(timeLeft % 60).padStart(2, '0');

  const handleBuyClick = () => {
    window.open('https://pay.kirvano.com/80aac1c2-c705-436a-a44e-36aa62049297', '_self');
  };

  return (
    <section className="flex flex-col items-center text-center mb-12 md:mb-20">
      <Card className="bg-accent text-accent-foreground p-3 md:p-4 rounded-xl shadow-lg mb-8 max-w-3xl w-full">
        <h1 className="font-headline text-xl sm:text-2xl md:text-3xl font-bold flex flex-wrap items-center justify-center gap-3 md:gap-4">
          <Timer className="h-8 w-8 sm:h-10 sm:w-10 shrink-0" />
          <span className="text-center">
            DESCONTO ESPECIAL DE <span className="line-through">R$47,00</span> por R$27,00 que acaba em: {minutes}:{seconds}
          </span>
        </h1>
      </Card>

      <div className="mt-8 flex flex-col items-center gap-8 w-full max-w-lg">
        <Image
          src="https://images2.imgbox.com/51/ed/QsrQDGbj_o.jpg"
          alt="Depoimentos de padres sobre as orações"
          width={800}
          height={600}
          className="rounded-lg shadow-md"
          data-ai-hint="priests collage"
        />

        <Button
          size="lg"
          className="font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal"
          onClick={handleBuyClick}
        >
          EU QUERO AS ORAÇÕES COM DESCONTO POR R$27,00
        </Button>
      </div>
    </section>
  );
}
// END FILE: src/components/landing/offer-section.tsx

// ====================================================================================================

// FILE: src/components/landing/our-lady-icon.tsx
import type { SVGProps } from "react";

export function OurLadyIcon(props: SVGProps<SVGSVGElement>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12 5a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
      <path d="M12 5C7 5 4 10 4 15c0 5 8 7 8 7s8-2 8-7c0-5-3-10-8-10z" />
    </svg>
  );
}
// END FILE: src/components/landing/our-lady-icon.tsx

// ====================================================================================================

// FILE: src/components/landing/rosary-icon.tsx
import type { SVGProps } from "react";

export function RosaryIcon(props: SVGProps<SVGSVGElement>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12 13a6 6 0 1 0 0-12 6 6 0 0 0 0 12z" />
      <path d="M12 13v4" />
      <path d="M10 20h4" />
      <path d="M12 17v5" />
    </svg>
  );
}
// END FILE: src/components/landing/rosary-icon.tsx

// ====================================================================================================

// FILE: src/components/landing/sales-popup.tsx
'use client';

import { useState, useEffect } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { CheckCircle } from 'lucide-react';
import { cn } from '@/lib/utils';

const names = [
  'Maria C.', 'José S.', 'Ana P.', 'João L.', 'Antônia F.', 'Francisco M.', 'Adriana A.', 'Carlos R.',
  'Fernanda O.', 'Paulo V.', 'Sandra B.', 'Marcos T.', 'Camila G.', 'Roberto N.', 'Juliana H.',
  'Ricardo E.', 'Marta J.', 'Luiz D.', 'Patrícia K.', 'Sérgio Q.',
];

const locations = [
  'de São Paulo, SP', 'do Rio de Janeiro, RJ', 'de Belo Horizonte, MG', 'de Salvador, BA', 'de Fortaleza, CE',
  'de Curitiba, PR', 'de Manaus, AM', 'de Recife, PE', 'de Porto Alegre, RS', 'de Goiânia, GO',
  'de Belém, PA', 'de Guarulhos, SP', 'de Campinas, SP', 'de São Luís, MA', 'de Maceió, AL',
];

type Notification = {
  name: string;
  location: string;
};

export function SalesPopup() {
  const [notification, setNotification] = useState<Notification | null>(null);
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    let timeoutId: NodeJS.Timeout;

    const showRandomNotification = () => {
      const randomName = names[Math.floor(Math.random() * names.length)];
      const randomLocation = locations[Math.floor(Math.random() * locations.length)];
      setNotification({ name: randomName, location: randomLocation });
      setIsVisible(true);

      // Hide after 5 seconds
      setTimeout(() => {
        setIsVisible(false);
      }, 5000);

      // Schedule the next notification in 15 seconds
      timeoutId = setTimeout(showRandomNotification, 15000);
    };

    // Initial delay before the first notification
    timeoutId = setTimeout(showRandomNotification, 8000);

    return () => {
      clearTimeout(timeoutId);
    };
  }, []);

  if (!notification) {
    return null;
  }

  return (
    <div
      className={cn(
        'fixed bottom-4 right-4 z-50 w-full max-w-xs transition-transform duration-500 ease-in-out',
        isVisible ? 'translate-x-0' : 'translate-x-[calc(100%+2rem)]'
      )}
    >
      <Card className="bg-accent text-accent-foreground shadow-lg">
        <CardContent className="p-3 flex items-center gap-3">
          <CheckCircle className="h-5 w-5 shrink-0" />
          <p className="text-xs font-semibold">
            {notification.name} {notification.location} acabou de receber as orações.
          </p>
        </CardContent>
      </Card>
    </div>
  );
}
// END FILE: src/components/landing/sales-popup.tsx

// ====================================================================================================

// FILE: src/components/landing/testimonial-card.tsx
import { ThumbsUp, Heart } from 'lucide-react';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { cn } from '@/lib/utils';

export type Testimonial = {
  id: number;
  name: string;
  username?: string;
  avatarUrl: string;
  avatarHint: string;
  text: string;
  likes: number;
  time: string;
  replies?: Testimonial[];
};

type TestimonialCardProps = {
  testimonial: Testimonial;
  isReply?: boolean;
};

export function TestimonialCard({ testimonial, isReply = false }: TestimonialCardProps) {
  const { name, username, avatarUrl, avatarHint, text, likes, time, replies } = testimonial;

  return (
    <div className={cn('flex items-start gap-3 w-full', isReply && 'pt-4')}>
      <Avatar className="h-10 w-10 shrink-0">
        <AvatarImage src={avatarUrl} alt={name} data-ai-hint={avatarHint}/>
        <AvatarFallback>{name.charAt(0)}</AvatarFallback>
      </Avatar>
      <div className="flex-1">
        <div className="bg-secondary rounded-xl p-3">
          <p className="font-bold text-sm text-foreground">
            {name}
            {username && <span className="text-muted-foreground font-normal ml-2">{username}</span>}
          </p>
          <p className="mt-1 text-sm text-foreground/90">{text}</p>
        </div>
        <div className="flex items-center gap-3 text-xs text-muted-foreground mt-1 px-2">
          <button className="hover:underline font-bold">Curtir</button>
          <span aria-hidden="true">·</span>
          <button className="hover:underline font-bold">Responder</button>
          <span aria-hidden="true">·</span>
          <span className="flex items-center gap-1">
            <ThumbsUp className="h-3 w-3 text-blue-500" />
            <Heart className="h-3 w-3 text-red-500" fill="currentColor" />
            <span className="ml-1">{likes.toLocaleString('pt-BR')}</span>
          </span>
          <span aria-hidden="true">·</span>
          <span>{time}</span>
        </div>
        
        {replies && replies.length > 0 && (
          <div className="mt-2">
            {replies.map(reply => (
              <TestimonialCard key={reply.id} testimonial={reply} isReply={true} />
            ))}
          </div>
        )}
      </div>
    </div>
  );
}
// END FILE: src/components/landing/testimonial-card.tsx

// ====================================================================================================

// FILE: src/components/landing/testimonials-section.tsx
import { TestimonialCard, type Testimonial } from './testimonial-card';

const testimonialsData: Testimonial[] = [
  {
    id: 1,
    name: 'Frei Gilson',
    avatarUrl: 'https://thumbs2.imgbox.com/16/a6/bzjtDdJQ_t.png',
    avatarHint: 'priest portrait',
    text: 'A Quaresma do Padre Pio é uma das experiências espirituais mais fortes que já vivi. Quando comecei a praticar essas orações, percebi mudanças reais na minha vida e na vida das pessoas que oravam comigo. Se você está aqui, é porque seu anjo quer te mostrar esse caminho 🙏',
    likes: 2134,
    time: '3 h',
    replies: [
      {
        id: 2,
        name: 'Maria Santos',
        username: '@FreiGilson',
        avatarUrl: 'https://thumbs2.imgbox.com/fc/13/RXzAe2rE_t.png',
        avatarHint: 'woman portrait',
        text: 'eu comecei ontem e hoje acordei com uma paz que nunca tinha sentido. 🙌🌟',
        likes: 254,
        time: '3 h',
      },
    ],
  },
  {
    id: 3,
    name: 'Marcelo Rossi',
    avatarUrl: 'https://thumbs2.imgbox.com/4b/7d/zDjIQAwV_t.png',
    avatarHint: 'priest portrait',
    text: 'Eu vivi o que está nesse vídeo. A Quaresma do Padre Pio não é só um livro, é um encontro real com Deus. Quem fizer com fé, vai sentir a mudança. Assista até o final e se permita viver essa experiência!',
    likes: 2001,
    time: '1 h',
    replies: [
      {
        id: 4,
        name: 'Gleicy Costa',
        username: '@MarceloRossi',
        avatarUrl: 'https://thumbs2.imgbox.com/87/54/0dMM6ESV_t.png',
        avatarHint: 'woman portrait',
        text: 'no final eu só conseguia chorar. É muito forte 😭 Obrigada por confirmar o que senti, padre!',
        likes: 189,
        time: '1 h',
      },
    ],
  },
  {
    id: 5,
    name: 'Reginaldo Manzotti',
    avatarUrl: 'https://thumbs2.imgbox.com/b9/08/pB4d3kjj_t.png',
    avatarHint: 'priest portrait',
    text: 'Essa oração reacendeu minha fé. A Quaresma do Padre Pio é mais do que uma devoção, é um presente direto do Céu. Se você está aqui, é porque essa bênção também é para você. Receba com fé!',
    likes: 1654,
    time: '1 h',
    replies: [
      {
        id: 6,
        name: 'Ana Luiza',
        username: '@ReginaldoManzotti',
        avatarUrl: 'https://thumbs2.imgbox.com/eb/cb/zfODzSUu_t.png',
        avatarHint: 'woman portrait',
        text: 'comecei hj e já sinto meu coracao diferente 🙌',
        likes: 135,
        time: '1 h',
      },
    ],
  },
  {
    id: 7,
    name: 'Fábio de Melo',
    avatarUrl: 'https://thumbs2.imgbox.com/5a/9a/LSUTrLtZ_t.png',
    avatarHint: 'priest portrait',
    text: 'Essa oração tocou meu coração de um jeito que não consigo explicar. Que mais pessoas tenham essa chance. É forte demais.',
    likes: 1361,
    time: '1 h',
    replies: [
      {
        id: 8,
        name: 'Carlos Henrique',
        username: '@FabioDeMelo',
        avatarUrl: 'https://thumbs2.imgbox.com/c3/9d/Qq4PQmYc_t.jpg',
        avatarHint: 'man portrait',
        text: 'meu pai chorou ouvindo. Tava afastado de Deus há anos. Hoje ele rezou comigo 🙏',
        likes: 318,
        time: '2 d',
      },
    ],
  },
  {
    id: 9,
    name: 'Patrícia Lima',
    avatarUrl: 'https://thumbs2.imgbox.com/da/67/ajSKP3eY_t.jpg',
    avatarHint: 'woman portrait',
    text: 'Meu marido voltou a trabalhar depois de fazer a oração 7 dias seguidos! Deus é fiel! 🙌',
    likes: 412,
    time: '1 h',
  },
  {
    id: 10,
    name: 'João Pedro',
    avatarUrl: 'https://thumbs2.imgbox.com/72/dc/GT3YxWwY_t.jpg',
    avatarHint: 'man portrait',
    text: 'Comecei a oração e uma luz invadiu meu quarto, foi lindo! 🙏',
    likes: 341,
    time: '1 h',
  },
  {
    id: 11,
    name: 'Luciana Silva',
    avatarUrl: 'https://thumbs2.imgbox.com/65/6a/L5JO7ilQ_t.jpg',
    avatarHint: 'woman portrait',
    text: 'Tô arrepiada! Essa oração das 3h é surreal. 😭🌟',
    likes: 267,
    time: '1 h',
  },
  {
    id: 12,
    name: 'Mateus Andrade',
    avatarUrl: 'https://thumbs2.imgbox.com/7b/b0/gsYWvBdF_t.jpg',
    avatarHint: 'man portrait',
    text: '3º dia de oração e recebi uma notícia maravilhosa hoje 🙌',
    likes: 198,
    time: '1 h',
  },
  {
    id: 13,
    name: 'Tânia Souza',
    avatarUrl: 'https://thumbs2.imgbox.com/3d/ae/bHEFsuqi_t.jpg',
    avatarHint: 'woman portrait',
    text: 'Tem alguém mais acordando às 3h pra orar? Eu tô!',
    likes: 541,
    time: '1 h',
  },
  {
    id: 14,
    name: 'Roberto Menezes',
    avatarUrl: 'https://thumbs2.imgbox.com/14/e9/DUPvPss9_t.jpg',
    avatarHint: 'man portrait',
    text: 'Ouvi dizer que o vídeo vai sair do ar logo! Assistam antes que tirem!!',
    likes: 114,
    time: '1 h',
  },
  {
    id: 15,
    name: 'Rafaela Martins',
    avatarUrl: 'https://thumbs2.imgbox.com/dd/55/H0rZXQVM_t.jpg',
    avatarHint: 'woman portrait',
    text: 'Confiei e hoje estou vivendo meu milagre! 🙏😭 Glória a Deus!',
    likes: 354,
    time: '1 h',
  },
  {
    id: 16,
    name: 'Ricardo Pereira',
    avatarUrl: 'https://thumbs2.imgbox.com/48/18/9JtnHEjz_t.png',
    avatarHint: 'man portrait',
    text: 'Senti meu anjo tocando minha cabeça na oração de ontem às 3h! Que loucura! 🙌',
    likes: 322,
    time: '1 h',
  },
];


export function TestimonialsSection() {
  return (
    <section>
      <div className="space-y-6 max-w-2xl mx-auto">
        {testimonialsData.map((testimonial) => (
          <TestimonialCard key={testimonial.id} testimonial={testimonial} />
        ))}
      </div>
    </section>
  );
}
// END FILE: src/components/landing/testimonials-section.tsx

// ====================================================================================================

// FILE: src/components/landing/top-banner.tsx
'use client';

import { useState, useEffect } from 'react';

export function TopBanner() {
  const [currentDate, setCurrentDate] = useState('');

  useEffect(() => {
    const today = new Date();
    const formattedDate = today.toLocaleDateString('pt-BR', {
      day: 'numeric',
      month: 'long',
    });
    setCurrentDate(formattedDate);
  }, []);

  if (!currentDate) {
    return null;
  }

  return (
    <div className="bg-primary text-primary-foreground text-center py-2 px-4 font-semibold text-sm md:text-base sticky top-0 z-20 shadow-lg">
      <p>
        Hoje, {currentDate}, é o último dia para receber essa bênção.
      </p>
    </div>
  );
}
// END FILE: src/components/landing/top-banner.tsx

// ====================================================================================================

// FILE: src/components/landing/vsl-section-arcanjomiguel.tsx
'use client';

import { useEffect } from 'react';
import Image from 'next/image';
import { BuyButtonArcanjoMiguel } from './buy-button-arcanjomiguel';

export function VSLSectionArcanjoMiguel() {
  useEffect(() => {
    const scriptId = 'vid-6877fc7f23dfc6928dd3232d-script';
    if (!document.getElementById(scriptId)) {
        const script = document.createElement('script');
        script.id = scriptId;
        script.src = 'https://scripts.converteai.net/0c8a72db-f75b-4b35-ba2c-4a6f347a22f7/players/6877fc7f23dfc6928dd3232d/v4/player.js';
        script.async = true;
        document.head.appendChild(script);
    }
  }, []);
  
  const videoHtml = `<vturb-smartplayer id="vid-6877fc7f23dfc6928dd3232d" style="display: block; margin: 0 auto; width: 100%; max-width: 400px;"></vturb-smartplayer>`;

  return (
    <section className="mb-12 md:mb-20">
      <div 
        className="relative overflow-hidden rounded-lg shadow-2xl"
        dangerouslySetInnerHTML={{ __html: videoHtml }}
      />
      
      <div className="mt-8 text-center">
        <BuyButtonArcanjoMiguel />
      </div>

      <div className="mt-8 flex justify-center">
        <Image
          src="https://i.imgur.com/o8id6M2.png"
          alt="Selo de Garantia"
          width={600}
          height={155}
          className="rounded-lg shadow-md"
          data-ai-hint="guarantee badge"
        />
      </div>
    </section>
  );
}
// END FILE: src/components/landing/vsl-section-arcanjomiguel.tsx

// ====================================================================================================

// FILE: src/components/landing/vsl-section-cancaonova.tsx
'use client';

import { useEffect } from 'react';
import Image from 'next/image';
import { BuyButtonCancaoNova } from './buy-button-cancaonova';

export function VSLSectionCancaoNova() {
  useEffect(() => {
    const scriptId = 'scr-685fefad80579a0ff032f65c-cancaonova'; // Placeholder video, unique id
    if (!document.getElementById(scriptId)) {
        const script = document.createElement('script');
        script.id = scriptId;
        script.src = 'https://scripts.converteai.net/62757a1b-3965-4814-8cfb-7803a2e429e1/players/685fefad80579a0ff032f65c/v4/player.js';
        script.async = true;
        document.head.appendChild(script);
    }
  }, []);
  
  const videoHtml = `<vturb-smartplayer id="vid-685fefad80579a0ff032f65c" style="display: block; margin: 0 auto; width: 100%;"></vturb-smartplayer>`;

  return (
    <section className="mb-12 md:mb-20">
      <div className="relative overflow-hidden rounded-lg shadow-2xl max-w-4xl mx-auto aspect-video bg-black">
          <div dangerouslySetInnerHTML={{ __html: videoHtml }} />
      </div>
      
      <div className="mt-8 text-center">
        <BuyButtonCancaoNova />
      </div>

      <div className="mt-8 flex justify-center">
        <Image
          src="https://i.imgur.com/o8id6M2.png"
          alt="Selo de Garantia"
          width={600}
          height={155}
          className="rounded-lg shadow-md"
          data-ai-hint="guarantee badge"
        />
      </div>
    </section>
  );
}
// END FILE: src/components/landing/vsl-section-cancaonova.tsx

// ====================================================================================================

// FILE: src/components/landing/vsl-section-nova.tsx
'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import { Button } from '@/components/ui/button';

export function VSLSectionNova() {
  const [showBuyButton, setShowBuyButton] = useState(false);

  useEffect(() => {
    // Show the buy button after 13 minutes and 35 seconds
    const timer = setTimeout(() => {
      setShowBuyButton(true);
    }, (13 * 60 + 35) * 1000);

    const scriptId = 'scr_68580daef5d522f5f216ce24';
    // Avoid appending the script if it already exists
    if (!document.getElementById(scriptId)) {
      const script = document.createElement('script');
      script.id = scriptId;
      script.src = 'https://scripts.converteai.net/62757a1b-3965-4814-8cfb-7803a2e429e1/players/68580daef5d522f5f216ce24/player.js';
      script.async = true;
      document.head.appendChild(script);
    }
    
    return () => {
      clearTimeout(timer);
      // We don't remove the script on unmount because the player might be needed
      // again and re-initializing could cause issues.
    };
  }, []);

  const handleBuyClick = () => {
    window.open('https://pay.kirvano.com/6d4a8c2c-5933-4ec4-a873-585f75d81a8b', '_self');
  };

  return (
    <section className="mb-12 md:mb-20">
       {/* Container for the Converte.ai player */}
      <div className="relative overflow-hidden rounded-lg shadow-2xl">
        <div id="vid_68580daef5d522f5f216ce24" style={{ position: 'relative', width: '100%', padding: '178.21782178217822% 0 0' }}>
          <img
            id="thumb_68580daef5d522f5f216ce24"
            src="https://images.converteai.net/62757a1b-3965-4814-8cfb-7803a2e429e1/players/68580daef5d522f5f216ce24/thumbnail.jpg"
            style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', objectFit: 'cover', display: 'block' }}
            alt="thumbnail"
          />
          <div
            id="backdrop_68580daef5d522f5f216ce24"
            style={{ WebkitBackdropFilter: 'blur(5px)', backdropFilter: 'blur(5px)', position: 'absolute', top: 0, height: '100%', width: '100%' }}
          ></div>
        </div>
      </div>

      {showBuyButton && (
        <div className="mt-8 text-center">
          <Button
            size="lg"
            className="font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal"
            onClick={handleBuyClick}
          >
            QUERO RECEBER MINHAS ORAÇÕES AGORA
          </Button>
        </div>
      )}

      <div className="mt-8 flex justify-center">
        <Image
          src="https://i.imgur.com/o8id6M2.png"
          alt="Selo de Garantia"
          width={600}
          height={155}
          className="rounded-lg shadow-md"
          data-ai-hint="guarantee badge"
        />
      </div>
    </section>
  );
}
// END FILE: src/components/landing/vsl-section-nova.tsx

// ====================================================================================================

// FILE: src/components/landing/vsl-section.tsx
'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import { Button } from '@/components/ui/button';

export function VSLSection() {
  const [showBuyButton, setShowBuyButton] = useState(false);

  useEffect(() => {
    // Show the buy button after 24 minutes and 20 seconds
    const timer = setTimeout(() => {
      setShowBuyButton(true);
    }, (24 * 60 + 20) * 1000);

    const scriptId = 'scr_685797132aa650383f53bc95';
    // Avoid appending the script if it already exists
    if (!document.getElementById(scriptId)) {
      const script = document.createElement('script');
      script.id = scriptId;
      script.src = 'https://scripts.converteai.net/62757a1b-3965-4814-8cfb-7803a2e429e1/players/685797132aa650383f53bc95/player.js';
      script.async = true;
      document.head.appendChild(script);
    }
    
    return () => {
      clearTimeout(timer);
      // We don't remove the script on unmount because the player might be needed
      // again and re-initializing could cause issues.
    };
  }, []);

  const handleBuyClick = () => {
    window.open('https://pay.kirvano.com/af55abff-865d-4c58-8cb5-31a9d9647fa2', '_self');
  };

  return (
    <section className="mb-12 md:mb-20">
       {/* Container for the Converte.ai player */}
      <div className="relative overflow-hidden rounded-lg shadow-2xl">
        <div id="vid_685797132aa650383f53bc95" style={{ position: 'relative', width: '100%', padding: '125% 0 0' }}>
          <img
            id="thumb_685797132aa650383f53bc95"
            src="https://images.converteai.net/62757a1b-3965-4814-8cfb-7803a2e429e1/players/685797132aa650383f53bc95/thumbnail.jpg"
            style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', objectFit: 'cover', display: 'block' }}
            alt="thumbnail"
          />
          <div
            id="backdrop_685797132aa650383f53bc95"
            style={{ WebkitBackdropFilter: 'blur(5px)', backdropFilter: 'blur(5px)', position: 'absolute', top: 0, height: '100%', width: '100%' }}
          ></div>
        </div>
      </div>

      <div className="mt-8 flex justify-center">
        <Image
          src="https://i.imgur.com/o8id6M2.png"
          alt="Selo de Garantia"
          width={600}
          height={155}
          className="rounded-lg shadow-md"
          data-ai-hint="guarantee badge"
        />
      </div>

      {showBuyButton && (
        <div className="mt-8 text-center">
          <Button
            size="lg"
            className="font-bold text-lg md:text-xl py-6 md:py-8 px-6 md:px-12 uppercase animate-pulse shadow-lg h-auto whitespace-normal"
            onClick={handleBuyClick}
          >
            QUERO RECEBER AS ORAÇÕES SECRETAS
          </Button>
        </div>
      )}
    </section>
  );
}
// END FILE: src/components/landing/vsl-section.tsx

// ====================================================================================================

// FILE: src/components/ui/accordion.tsx
"use client"

import * as React from "react"
import * as AccordionPrimitive from "@radix-ui/react-accordion"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const Accordion = AccordionPrimitive.Root

const AccordionItem = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
>(({ className, ...props }, ref) => (
  <AccordionPrimitive.Item
    ref={ref}
    className={cn("border-b", className)}
    {...props}
  />
))
AccordionItem.displayName = "AccordionItem"

const AccordionTrigger = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Header className="flex">
    <AccordionPrimitive.Trigger
      ref={ref}
      className={cn(
        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
        className
      )}
      {...props}
    >
      {children}
      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200" />
    </AccordionPrimitive.Trigger>
  </AccordionPrimitive.Header>
))
AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName

const AccordionContent = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Content
    ref={ref}
    className="overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
    {...props}
  >
    <div className={cn("pb-4 pt-0", className)}>{children}</div>
  </AccordionPrimitive.Content>
))

AccordionContent.displayName = AccordionPrimitive.Content.displayName

export { Accordion, AccordionItem, AccordionTrigger, AccordionContent }
// END FILE: src/components/ui/accordion.tsx

// ====================================================================================================

// FILE: src/components/ui/alert-dialog.tsx
"use client"

import * as React from "react"
import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

const AlertDialog = AlertDialogPrimitive.Root

const AlertDialogTrigger = AlertDialogPrimitive.Trigger

const AlertDialogPortal = AlertDialogPrimitive.Portal

const AlertDialogOverlay = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName

const AlertDialogContent = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
>(({ className, ...props }, ref) => (
  <AlertDialogPortal>
    <AlertDialogOverlay />
    <AlertDialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    />
  </AlertDialogPortal>
))
AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName

const AlertDialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
AlertDialogHeader.displayName = "AlertDialogHeader"

const AlertDialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
AlertDialogFooter.displayName = "AlertDialogFooter"

const AlertDialogTitle = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold", className)}
    {...props}
  />
))
AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName

const AlertDialogDescription = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
AlertDialogDescription.displayName =
  AlertDialogPrimitive.Description.displayName

const AlertDialogAction = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Action>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Action
    ref={ref}
    className={cn(buttonVariants(), className)}
    {...props}
  />
))
AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName

const AlertDialogCancel = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Cancel
    ref={ref}
    className={cn(
      buttonVariants({ variant: "outline" }),
      "mt-2 sm:mt-0",
      className
    )}
    {...props}
  />
))
AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName

export {
  AlertDialog,
  AlertDialogPortal,
  AlertDialogOverlay,
  AlertDialogTrigger,
  AlertDialogContent,
  AlertDialogHeader,
  AlertDialogFooter,
  AlertDialogTitle,
  AlertDialogDescription,
  AlertDialogAction,
  AlertDialogCancel,
}
// END FILE: src/components/ui/alert-dialog.tsx

// ====================================================================================================

// FILE: src/components/ui/alert.tsx
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const alertVariants = cva(
  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Alert = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
>(({ className, variant, ...props }, ref) => (
  <div
    ref={ref}
    role="alert"
    className={cn(alertVariants({ variant }), className)}
    {...props}
  />
))
Alert.displayName = "Alert"

const AlertTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h5
    ref={ref}
    className={cn("mb-1 font-medium leading-none tracking-tight", className)}
    {...props}
  />
))
AlertTitle.displayName = "AlertTitle"

const AlertDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm [&_p]:leading-relaxed", className)}
    {...props}
  />
))
AlertDescription.displayName = "AlertDescription"

export { Alert, AlertTitle, AlertDescription }
// END FILE: src/components/ui/alert.tsx

// ====================================================================================================

// FILE: src/components/ui/avatar.tsx
"use client"

import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

export { Avatar, AvatarImage, AvatarFallback }
// END FILE: src/components/ui/avatar.tsx

// ====================================================================================================

// FILE: src/components/ui/badge.tsx
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }
// END FILE: src/components/ui/badge.tsx

// ====================================================================================================

// FILE: src/components/ui/button.tsx
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }
// END FILE: src/components/ui/button.tsx

// ====================================================================================================

// FILE: src/components/ui/calendar.tsx
"use client"

import * as React from "react"
import { ChevronLeft, ChevronRight } from "lucide-react"
import { DayPicker } from "react-day-picker"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

export type CalendarProps = React.ComponentProps<typeof DayPicker>

function Calendar({
  className,
  classNames,
  showOutsideDays = true,
  ...props
}: CalendarProps) {
  return (
    <DayPicker
      showOutsideDays={showOutsideDays}
      className={cn("p-3", className)}
      classNames={{
        months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
        month: "space-y-4",
        caption: "flex justify-center pt-1 relative items-center",
        caption_label: "text-sm font-medium",
        nav: "space-x-1 flex items-center",
        nav_button: cn(
          buttonVariants({ variant: "outline" }),
          "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100"
        ),
        nav_button_previous: "absolute left-1",
        nav_button_next: "absolute right-1",
        table: "w-full border-collapse space-y-1",
        head_row: "flex",
        head_cell:
          "text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]",
        row: "flex w-full mt-2",
        cell: "h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20",
        day: cn(
          buttonVariants({ variant: "ghost" }),
          "h-9 w-9 p-0 font-normal aria-selected:opacity-100"
        ),
        day_range_end: "day-range-end",
        day_selected:
          "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
        day_today: "bg-accent text-accent-foreground",
        day_outside:
          "day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground",
        day_disabled: "text-muted-foreground opacity-50",
        day_range_middle:
          "aria-selected:bg-accent aria-selected:text-accent-foreground",
        day_hidden: "invisible",
        ...classNames,
      }}
      components={{
        IconLeft: ({ className, ...props }) => (
          <ChevronLeft className={cn("h-4 w-4", className)} {...props} />
        ),
        IconRight: ({ className, ...props }) => (
          <ChevronRight className={cn("h-4 w-4", className)} {...props} />
        ),
      }}
      {...props}
    />
  )
}
Calendar.displayName = "Calendar"

export { Calendar }
// END FILE: src/components/ui/calendar.tsx

// ====================================================================================================

// FILE: src/components/ui/card.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-lg border bg-card text-card-foreground shadow-sm",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "text-2xl font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }
// END FILE: src/components/ui/card.tsx

// ====================================================================================================

// FILE: src/components/ui/chart.tsx
"use client"

import * as React from "react"
import * as RechartsPrimitive from "recharts"

import { cn } from "@/lib/utils"

// Format: { THEME_NAME: CSS_SELECTOR }
const THEMES = { light: "", dark: ".dark" } as const

export type ChartConfig = {
  [k in string]: {
    label?: React.ReactNode
    icon?: React.ComponentType
  } & (
    | { color?: string; theme?: never }
    | { color?: never; theme: Record<keyof typeof THEMES, string> }
  )
}

type ChartContextProps = {
  config: ChartConfig
}

const ChartContext = React.createContext<ChartContextProps | null>(null)

function useChart() {
  const context = React.useContext(ChartContext)

  if (!context) {
    throw new Error("useChart must be used within a <ChartContainer />")
  }

  return context
}

const ChartContainer = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    config: ChartConfig
    children: React.ComponentProps<
      typeof RechartsPrimitive.ResponsiveContainer
    >["children"]
  }
>(({ id, className, children, config, ...props }, ref) => {
  const uniqueId = React.useId()
  const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`

  return (
    <ChartContext.Provider value={{ config }}>
      <div
        data-chart={chartId}
        ref={ref}
        className={cn(
          "flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
          className
        )}
        {...props}
      >
        <ChartStyle id={chartId} config={config} />
        <RechartsPrimitive.ResponsiveContainer>
          {children}
        </RechartsPrimitive.ResponsiveContainer>
      </div>
    </ChartContext.Provider>
  )
})
ChartContainer.displayName = "Chart"

const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
  const colorConfig = Object.entries(config).filter(
    ([, config]) => config.theme || config.color
  )

  if (!colorConfig.length) {
    return null
  }

  return (
    <style
      dangerouslySetInnerHTML={{
        __html: Object.entries(THEMES)
          .map(
            ([theme, prefix]) => `
${prefix} [data-chart=${id}] {
${colorConfig
  .map(([key, itemConfig]) => {
    const color =
      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||
      itemConfig.color
    return color ? `  --color-${key}: ${color};` : null
  })
  .join("\n")}
}
`
          )
          .join("\n"),
      }}
    />
  )
}

const ChartTooltip = RechartsPrimitive.Tooltip

const ChartTooltipContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
    React.ComponentProps<"div"> & {
      hideLabel?: boolean
      hideIndicator?: boolean
      indicator?: "line" | "dot" | "dashed"
      nameKey?: string
      labelKey?: string
    }
>(
  (
    {
      active,
      payload,
      className,
      indicator = "dot",
      hideLabel = false,
      hideIndicator = false,
      label,
      labelFormatter,
      labelClassName,
      formatter,
      color,
      nameKey,
      labelKey,
    },
    ref
  ) => {
    const { config } = useChart()

    const tooltipLabel = React.useMemo(() => {
      if (hideLabel || !payload?.length) {
        return null
      }

      const [item] = payload
      const key = `${labelKey || item.dataKey || item.name || "value"}`
      const itemConfig = getPayloadConfigFromPayload(config, item, key)
      const value =
        !labelKey && typeof label === "string"
          ? config[label as keyof typeof config]?.label || label
          : itemConfig?.label

      if (labelFormatter) {
        return (
          <div className={cn("font-medium", labelClassName)}>
            {labelFormatter(value, payload)}
          </div>
        )
      }

      if (!value) {
        return null
      }

      return <div className={cn("font-medium", labelClassName)}>{value}</div>
    }, [
      label,
      labelFormatter,
      payload,
      hideLabel,
      labelClassName,
      config,
      labelKey,
    ])

    if (!active || !payload?.length) {
      return null
    }

    const nestLabel = payload.length === 1 && indicator !== "dot"

    return (
      <div
        ref={ref}
        className={cn(
          "grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
          className
        )}
      >
        {!nestLabel ? tooltipLabel : null}
        <div className="grid gap-1.5">
          {payload.map((item, index) => {
            const key = `${nameKey || item.name || item.dataKey || "value"}`
            const itemConfig = getPayloadConfigFromPayload(config, item, key)
            const indicatorColor = color || item.payload.fill || item.color

            return (
              <div
                key={item.dataKey}
                className={cn(
                  "flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
                  indicator === "dot" && "items-center"
                )}
              >
                {formatter && item?.value !== undefined && item.name ? (
                  formatter(item.value, item.name, item, index, item.payload)
                ) : (
                  <>
                    {itemConfig?.icon ? (
                      <itemConfig.icon />
                    ) : (
                      !hideIndicator && (
                        <div
                          className={cn(
                            "shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",
                            {
                              "h-2.5 w-2.5": indicator === "dot",
                              "w-1": indicator === "line",
                              "w-0 border-[1.5px] border-dashed bg-transparent":
                                indicator === "dashed",
                              "my-0.5": nestLabel && indicator === "dashed",
                            }
                          )}
                          style={
                            {
                              "--color-bg": indicatorColor,
                              "--color-border": indicatorColor,
                            } as React.CSSProperties
                          }
                        />
                      )
                    )}
                    <div
                      className={cn(
                        "flex flex-1 justify-between leading-none",
                        nestLabel ? "items-end" : "items-center"
                      )}
                    >
                      <div className="grid gap-1.5">
                        {nestLabel ? tooltipLabel : null}
                        <span className="text-muted-foreground">
                          {itemConfig?.label || item.name}
                        </span>
                      </div>
                      {item.value && (
                        <span className="font-mono font-medium tabular-nums text-foreground">
                          {item.value.toLocaleString()}
                        </span>
                      )}
                    </div>
                  </>
                )}
              </div>
            )
          })}
        </div>
      </div>
    )
  }
)
ChartTooltipContent.displayName = "ChartTooltip"

const ChartLegend = RechartsPrimitive.Legend

const ChartLegendContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> &
    Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
      hideIcon?: boolean
      nameKey?: string
    }
>(
  (
    { className, hideIcon = false, payload, verticalAlign = "bottom", nameKey },
    ref
  ) => {
    const { config } = useChart()

    if (!payload?.length) {
      return null
    }

    return (
      <div
        ref={ref}
        className={cn(
          "flex items-center justify-center gap-4",
          verticalAlign === "top" ? "pb-3" : "pt-3",
          className
        )}
      >
        {payload.map((item) => {
          const key = `${nameKey || item.dataKey || "value"}`
          const itemConfig = getPayloadConfigFromPayload(config, item, key)

          return (
            <div
              key={item.value}
              className={cn(
                "flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground"
              )}
            >
              {itemConfig?.icon && !hideIcon ? (
                <itemConfig.icon />
              ) : (
                <div
                  className="h-2 w-2 shrink-0 rounded-[2px]"
                  style={{
                    backgroundColor: item.color,
                  }}
                />
              )}
              {itemConfig?.label}
            </div>
          )
        })}
      </div>
    )
  }
)
ChartLegendContent.displayName = "ChartLegend"

// Helper to extract item config from a payload.
function getPayloadConfigFromPayload(
  config: ChartConfig,
  payload: unknown,
  key: string
) {
  if (typeof payload !== "object" || payload === null) {
    return undefined
  }

  const payloadPayload =
    "payload" in payload &&
    typeof payload.payload === "object" &&
    payload.payload !== null
      ? payload.payload
      : undefined

  let configLabelKey: string = key

  if (
    key in payload &&
    typeof payload[key as keyof typeof payload] === "string"
  ) {
    configLabelKey = payload[key as keyof typeof payload] as string
  } else if (
    payloadPayload &&
    key in payloadPayload &&
    typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
  ) {
    configLabelKey = payloadPayload[
      key as keyof typeof payloadPayload
    ] as string
  }

  return configLabelKey in config
    ? config[configLabelKey]
    : config[key as keyof typeof config]
}

export {
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
  ChartLegend,
  ChartLegendContent,
  ChartStyle,
}
// END FILE: src/components/ui/chart.tsx

// ====================================================================================================

// FILE: src/components/ui/checkbox.tsx
"use client"

import * as React from "react"
import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
import { Check } from "lucide-react"

import { cn } from "@/lib/utils"

const Checkbox = React.forwardRef<
  React.ElementRef<typeof CheckboxPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
>(({ className, ...props }, ref) => (
  <CheckboxPrimitive.Root
    ref={ref}
    className={cn(
      "peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
      className
    )}
    {...props}
  >
    <CheckboxPrimitive.Indicator
      className={cn("flex items-center justify-center text-current")}
    >
      <Check className="h-4 w-4" />
    </CheckboxPrimitive.Indicator>
  </CheckboxPrimitive.Root>
))
Checkbox.displayName = CheckboxPrimitive.Root.displayName

export { Checkbox }
// END FILE: src/components/ui/checkbox.tsx

// ====================================================================================================

// FILE: src/components/ui/dialog.tsx
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = "DialogHeader"

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = "DialogFooter"

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogClose,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}
// END FILE: src/components/ui/dialog.tsx

// ====================================================================================================

// FILE: src/components/ui/dropdown-menu.tsx
"use client"

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const DropdownMenu = DropdownMenuPrimitive.Root

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger

const DropdownMenuGroup = DropdownMenuPrimitive.Group

const DropdownMenuPortal = DropdownMenuPrimitive.Portal

const DropdownMenuSub = DropdownMenuPrimitive.Sub

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto" />
  </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName =
  DropdownMenuPrimitive.SubTrigger.displayName

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    )}
    {...props}
  />
))
DropdownMenuSubContent.displayName =
  DropdownMenuPrimitive.SubContent.displayName

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      )}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName =
  DropdownMenuPrimitive.CheckboxItem.displayName

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName

const DropdownMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
      {...props}
    />
  )
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
}
// END FILE: src/components/ui/dropdown-menu.tsx

// ====================================================================================================

// FILE: src/components/ui/form.tsx
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { Slot } from "@radix-ui/react-slot"
import {
  Controller,
  FormProvider,
  useFormContext,
  type ControllerProps,
  type FieldPath,
  type FieldValues,
} from "react-hook-form"

import { cn } from "@/lib/utils"
import { Label } from "@/components/ui/label"

const Form = FormProvider

type FormFieldContextValue<
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
> = {
  name: TName
}

const FormFieldContext = React.createContext<FormFieldContextValue>(
  {} as FormFieldContextValue
)

const FormField = <
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
>({
  ...props
}: ControllerProps<TFieldValues, TName>) => {
  return (
    <FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>
  )
}

const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext)
  const itemContext = React.useContext(FormItemContext)
  const { getFieldState, formState } = useFormContext()

  const fieldState = getFieldState(fieldContext.name, formState)

  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>")
  }

  const { id } = itemContext

  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  }
}

type FormItemContextValue = {
  id: string
}

const FormItemContext = React.createContext<FormItemContextValue>(
  {} as FormItemContextValue
)

const FormItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const id = React.useId()

  return (
    <FormItemContext.Provider value={{ id }}>
      <div ref={ref} className={cn("space-y-2", className)} {...props} />
    </FormItemContext.Provider>
  )
})
FormItem.displayName = "FormItem"

const FormLabel = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
>(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField()

  return (
    <Label
      ref={ref}
      className={cn(error && "text-destructive", className)}
      htmlFor={formItemId}
      {...props}
    />
  )
})
FormLabel.displayName = "FormLabel"

const FormControl = React.forwardRef<
  React.ElementRef<typeof Slot>,
  React.ComponentPropsWithoutRef<typeof Slot>
>(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()

  return (
    <Slot
      ref={ref}
      id={formItemId}
      aria-describedby={
        !error
          ? `${formDescriptionId}`
          : `${formDescriptionId} ${formMessageId}`
      }
      aria-invalid={!!error}
      {...props}
    />
  )
})
FormControl.displayName = "FormControl"

const FormDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField()

  return (
    <p
      ref={ref}
      id={formDescriptionId}
      className={cn("text-sm text-muted-foreground", className)}
      {...props}
    />
  )
})
FormDescription.displayName = "FormDescription"

const FormMessage = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, children, ...props }, ref) => {
  const { error, formMessageId } = useFormField()
  const body = error ? String(error?.message ?? "") : children

  if (!body) {
    return null
  }

  return (
    <p
      ref={ref}
      id={formMessageId}
      className={cn("text-sm font-medium text-destructive", className)}
      {...props}
    >
      {body}
    </p>
  )
})
FormMessage.displayName = "FormMessage"

export {
  useFormField,
  Form,
  FormItem,
  FormLabel,
  FormControl,
  FormDescription,
  FormMessage,
  FormField,
}
// END FILE: src/components/ui/form.tsx

// ====================================================================================================

// FILE: src/components/ui/input.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }
// END FILE: src/components/ui/input.tsx

// ====================================================================================================

// FILE: src/components/ui/label.tsx
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)

const Label = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
    VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
  <LabelPrimitive.Root
    ref={ref}
    className={cn(labelVariants(), className)}
    {...props}
  />
))
Label.displayName = LabelPrimitive.Root.displayName

export { Label }
// END FILE: src/components/ui/label.tsx

// ====================================================================================================

// FILE: src/components/ui/menubar.tsx
"use client"

import * as React from "react"
import * as MenubarPrimitive from "@radix-ui/react-menubar"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

function MenubarMenu({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {
  return <MenubarPrimitive.Menu {...props} />
}

function MenubarGroup({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Group>) {
  return <MenubarPrimitive.Group {...props} />
}

function MenubarPortal({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {
  return <MenubarPrimitive.Portal {...props} />
}

function MenubarRadioGroup({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {
  return <MenubarPrimitive.RadioGroup {...props} />
}

function MenubarSub({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {
  return <MenubarPrimitive.Sub data-slot="menubar-sub" {...props} />
}

const Menubar = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Root
    ref={ref}
    className={cn(
      "flex h-10 items-center space-x-1 rounded-md border bg-background p-1",
      className
    )}
    {...props}
  />
))
Menubar.displayName = MenubarPrimitive.Root.displayName

const MenubarTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      className
    )}
    {...props}
  />
))
MenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName

const MenubarSubTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <MenubarPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </MenubarPrimitive.SubTrigger>
))
MenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName

const MenubarSubContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    )}
    {...props}
  />
))
MenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName

const MenubarContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>
>(
  (
    { className, align = "start", alignOffset = -4, sideOffset = 8, ...props },
    ref
  ) => (
    <MenubarPrimitive.Portal>
      <MenubarPrimitive.Content
        ref={ref}
        align={align}
        alignOffset={alignOffset}
        sideOffset={sideOffset}
        className={cn(
          "z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
          className
        )}
        {...props}
      />
    </MenubarPrimitive.Portal>
  )
)
MenubarContent.displayName = MenubarPrimitive.Content.displayName

const MenubarItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
MenubarItem.displayName = MenubarPrimitive.Item.displayName

const MenubarCheckboxItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <MenubarPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.CheckboxItem>
))
MenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName

const MenubarRadioItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <MenubarPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.RadioItem>
))
MenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName

const MenubarLabel = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
MenubarLabel.displayName = MenubarPrimitive.Label.displayName

const MenubarSeparator = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
MenubarSeparator.displayName = MenubarPrimitive.Separator.displayName

const MenubarShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
MenubarShortcut.displayname = "MenubarShortcut"

export {
  Menubar,
  MenubarMenu,
  MenubarTrigger,
  MenubarContent,
  MenubarItem,
  MenubarSeparator,
  MenubarLabel,
  MenubarCheckboxItem,
  MenubarRadioGroup,
  MenubarRadioItem,
  MenubarPortal,
  MenubarSubContent,
  MenubarSubTrigger,
  MenubarGroup,
  MenubarSub,
  MenubarShortcut,
}
// END FILE: src/components/ui/menubar.tsx

// ====================================================================================================

// FILE: src/components/ui/popover.tsx
"use client"

import * as React from "react"
import * as PopoverPrimitive from "@radix-ui/react-popover"

import { cn } from "@/lib/utils"

const Popover = PopoverPrimitive.Root

const PopoverTrigger = PopoverPrimitive.Trigger

const PopoverContent = React.forwardRef<
  React.ElementRef<typeof PopoverPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <PopoverPrimitive.Portal>
    <PopoverPrimitive.Content
      ref={ref}
      align={align}
      sideOffset={sideOffset}
      className={cn(
        "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      )}
      {...props}
    />
  </PopoverPrimitive.Portal>
))
PopoverContent.displayName = PopoverPrimitive.Content.displayName

export { Popover, PopoverTrigger, PopoverContent }
// END FILE: src/components/ui/popover.tsx

// ====================================================================================================

// FILE: src/components/ui/progress.tsx
"use client"

import * as React from "react"
import * as ProgressPrimitive from "@radix-ui/react-progress"

import { cn } from "@/lib/utils"

const Progress = React.forwardRef<
  React.ElementRef<typeof ProgressPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
>(({ className, value, ...props }, ref) => (
  <ProgressPrimitive.Root
    ref={ref}
    className={cn(
      "relative h-4 w-full overflow-hidden rounded-full bg-secondary",
      className
    )}
    {...props}
  >
    <ProgressPrimitive.Indicator
      className="h-full w-full flex-1 bg-primary transition-all"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </ProgressPrimitive.Root>
))
Progress.displayName = ProgressPrimitive.Root.displayName

export { Progress }
// END FILE: src/components/ui/progress.tsx

// ====================================================================================================

// FILE: src/components/ui/radio-group.tsx
"use client"

import * as React from "react"
import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
import { Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const RadioGroup = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Root
      className={cn("grid gap-2", className)}
      {...props}
      ref={ref}
    />
  )
})
RadioGroup.displayName = RadioGroupPrimitive.Root.displayName

const RadioGroupItem = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Item
      ref={ref}
      className={cn(
        "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    >
      <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
        <Circle className="h-2.5 w-2.5 fill-current text-current" />
      </RadioGroupPrimitive.Indicator>
    </RadioGroupPrimitive.Item>
  )
})
RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName

export { RadioGroup, RadioGroupItem }
// END FILE: src/components/ui/radio-group.tsx

// ====================================================================================================

// FILE: src/components/ui/scroll-area.tsx
"use client"

import * as React from "react"
import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"

import { cn } from "@/lib/utils"

const ScrollArea = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <ScrollAreaPrimitive.Root
    ref={ref}
    className={cn("relative overflow-hidden", className)}
    {...props}
  >
    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
      {children}
    </ScrollAreaPrimitive.Viewport>
    <ScrollBar />
    <ScrollAreaPrimitive.Corner />
  </ScrollAreaPrimitive.Root>
))
ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName

const ScrollBar = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
>(({ className, orientation = "vertical", ...props }, ref) => (
  <ScrollAreaPrimitive.ScrollAreaScrollbar
    ref={ref}
    orientation={orientation}
    className={cn(
      "flex touch-none select-none transition-colors",
      orientation === "vertical" &&
        "h-full w-2.5 border-l border-l-transparent p-[1px]",
      orientation === "horizontal" &&
        "h-2.5 flex-col border-t border-t-transparent p-[1px]",
      className
    )}
    {...props}
  >
    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
  </ScrollAreaPrimitive.ScrollAreaScrollbar>
))
ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName

export { ScrollArea, ScrollBar }
// END FILE: src/components/ui/scroll-area.tsx

// ====================================================================================================

// FILE: src/components/ui/select.tsx
"use client"

import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { Check, ChevronDown, ChevronUp } from "lucide-react"

import { cn } from "@/lib/utils"

const Select = SelectPrimitive.Root

const SelectGroup = SelectPrimitive.Group

const SelectValue = SelectPrimitive.Value

const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    )}
    {...props}
  >
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName =
  SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className
      )}
      position={position}
      {...props}
    >
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn(
          "p-1",
          position === "popper" &&
            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
        )}
      >
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
    {...props}
  />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>

    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  SelectScrollUpButton,
  SelectScrollDownButton,
}
// END FILE: src/components/ui/select.tsx

// ====================================================================================================

// FILE: src/components/ui/separator.tsx
"use client"

import * as React from "react"
import * as SeparatorPrimitive from "@radix-ui/react-separator"

import { cn } from "@/lib/utils"

const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
>(
  (
    { className, orientation = "horizontal", decorative = true, ...props },
    ref
  ) => (
    <SeparatorPrimitive.Root
      ref={ref}
      decorative={decorative}
      orientation={orientation}
      className={cn(
        "shrink-0 bg-border",
        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
        className
      )}
      {...props}
    />
  )
)
Separator.displayName = SeparatorPrimitive.Root.displayName

export { Separator }
// END FILE: src/components/ui/separator.tsx

// ====================================================================================================

// FILE: src/components/ui/sheet.tsx
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      {children}
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}
// END FILE: src/components/ui/sheet.tsx

// ====================================================================================================

// FILE: src/components/ui/sidebar.tsx
"use client"

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { VariantProps, cva } from "class-variance-authority"
import { PanelLeft } from "lucide-react"

import { useIsMobile } from "@/hooks/use-mobile"
import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Separator } from "@/components/ui/separator"
import { Sheet, SheetContent } from "@/components/ui/sheet"
import { Skeleton } from "@/components/ui/skeleton"
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip"

const SIDEBAR_COOKIE_NAME = "sidebar_state"
const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7
const SIDEBAR_WIDTH = "16rem"
const SIDEBAR_WIDTH_MOBILE = "18rem"
const SIDEBAR_WIDTH_ICON = "3rem"
const SIDEBAR_KEYBOARD_SHORTCUT = "b"

type SidebarContext = {
  state: "expanded" | "collapsed"
  open: boolean
  setOpen: (open: boolean) => void
  openMobile: boolean
  setOpenMobile: (open: boolean) => void
  isMobile: boolean
  toggleSidebar: () => void
}

const SidebarContext = React.createContext<SidebarContext | null>(null)

function useSidebar() {
  const context = React.useContext(SidebarContext)
  if (!context) {
    throw new Error("useSidebar must be used within a SidebarProvider.")
  }

  return context
}

const SidebarProvider = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    defaultOpen?: boolean
    open?: boolean
    onOpenChange?: (open: boolean) => void
  }
>(
  (
    {
      defaultOpen = true,
      open: openProp,
      onOpenChange: setOpenProp,
      className,
      style,
      children,
      ...props
    },
    ref
  ) => {
    const isMobile = useIsMobile()
    const [openMobile, setOpenMobile] = React.useState(false)

    // This is the internal state of the sidebar.
    // We use openProp and setOpenProp for control from outside the component.
    const [_open, _setOpen] = React.useState(defaultOpen)
    const open = openProp ?? _open
    const setOpen = React.useCallback(
      (value: boolean | ((value: boolean) => boolean)) => {
        const openState = typeof value === "function" ? value(open) : value
        if (setOpenProp) {
          setOpenProp(openState)
        } else {
          _setOpen(openState)
        }

        // This sets the cookie to keep the sidebar state.
        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`
      },
      [setOpenProp, open]
    )

    // Helper to toggle the sidebar.
    const toggleSidebar = React.useCallback(() => {
      return isMobile
        ? setOpenMobile((open) => !open)
        : setOpen((open) => !open)
    }, [isMobile, setOpen, setOpenMobile])

    // Adds a keyboard shortcut to toggle the sidebar.
    React.useEffect(() => {
      const handleKeyDown = (event: KeyboardEvent) => {
        if (
          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&
          (event.metaKey || event.ctrlKey)
        ) {
          event.preventDefault()
          toggleSidebar()
        }
      }

      window.addEventListener("keydown", handleKeyDown)
      return () => window.removeEventListener("keydown", handleKeyDown)
    }, [toggleSidebar])

    // We add a state so that we can do data-state="expanded" or "collapsed".
    // This makes it easier to style the sidebar with Tailwind classes.
    const state = open ? "expanded" : "collapsed"

    const contextValue = React.useMemo<SidebarContext>(
      () => ({
        state,
        open,
        setOpen,
        isMobile,
        openMobile,
        setOpenMobile,
        toggleSidebar,
      }),
      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]
    )

    return (
      <SidebarContext.Provider value={contextValue}>
        <TooltipProvider delayDuration={0}>
          <div
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH,
                "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
                ...style,
              } as React.CSSProperties
            }
            className={cn(
              "group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar",
              className
            )}
            ref={ref}
            {...props}
          >
            {children}
          </div>
        </TooltipProvider>
      </SidebarContext.Provider>
    )
  }
)
SidebarProvider.displayName = "SidebarProvider"

const Sidebar = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    side?: "left" | "right"
    variant?: "sidebar" | "floating" | "inset"
    collapsible?: "offcanvas" | "icon" | "none"
  }
>(
  (
    {
      side = "left",
      variant = "sidebar",
      collapsible = "offcanvas",
      className,
      children,
      ...props
    },
    ref
  ) => {
    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()

    if (collapsible === "none") {
      return (
        <div
          className={cn(
            "flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground",
            className
          )}
          ref={ref}
          {...props}
        >
          {children}
        </div>
      )
    }

    if (isMobile) {
      return (
        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>
          <SheetContent
            data-sidebar="sidebar"
            data-mobile="true"
            className="w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden"
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
              } as React.CSSProperties
            }
            side={side}
          >
            <div className="flex h-full w-full flex-col">{children}</div>
          </SheetContent>
        </Sheet>
      )
    }

    return (
      <div
        ref={ref}
        className="group peer hidden md:block text-sidebar-foreground"
        data-state={state}
        data-collapsible={state === "collapsed" ? collapsible : ""}
        data-variant={variant}
        data-side={side}
      >
        {/* This is what handles the sidebar gap on desktop */}
        <div
          className={cn(
            "duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear",
            "group-data-[collapsible=offcanvas]:w-0",
            "group-data-[side=right]:rotate-180",
            variant === "floating" || variant === "inset"
              ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon]"
          )}
        />
        <div
          className={cn(
            "duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex",
            side === "left"
              ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
              : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
            // Adjust the padding for floating and inset variants.
            variant === "floating" || variant === "inset"
              ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l",
            className
          )}
          {...props}
        >
          <div
            data-sidebar="sidebar"
            className="flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow"
          >
            {children}
          </div>
        </div>
      </div>
    )
  }
)
Sidebar.displayName = "Sidebar"

const SidebarTrigger = React.forwardRef<
  React.ElementRef<typeof Button>,
  React.ComponentProps<typeof Button>
>(({ className, onClick, ...props }, ref) => {
  const { toggleSidebar } = useSidebar()

  return (
    <Button
      ref={ref}
      data-sidebar="trigger"
      variant="ghost"
      size="icon"
      className={cn("h-7 w-7", className)}
      onClick={(event) => {
        onClick?.(event)
        toggleSidebar()
      }}
      {...props}
    >
      <PanelLeft />
      <span className="sr-only">Toggle Sidebar</span>
    </Button>
  )
})
SidebarTrigger.displayName = "SidebarTrigger"

const SidebarRail = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button">
>(({ className, ...props }, ref) => {
  const { toggleSidebar } = useSidebar()

  return (
    <button
      ref={ref}
      data-sidebar="rail"
      aria-label="Toggle Sidebar"
      tabIndex={-1}
      onClick={toggleSidebar}
      title="Toggle Sidebar"
      className={cn(
        "absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex",
        "[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize",
        "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
        "group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar",
        "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
        "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
        className
      )}
      {...props}
    />
  )
})
SidebarRail.displayName = "SidebarRail"

const SidebarInset = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"main">
>(({ className, ...props }, ref) => {
  return (
    <main
      ref={ref}
      className={cn(
        "relative flex min-h-svh flex-1 flex-col bg-background",
        "peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow",
        className
      )}
      {...props}
    />
  )
})
SidebarInset.displayName = "SidebarInset"

const SidebarInput = React.forwardRef<
  React.ElementRef<typeof Input>,
  React.ComponentProps<typeof Input>
>(({ className, ...props }, ref) => {
  return (
    <Input
      ref={ref}
      data-sidebar="input"
      className={cn(
        "h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring",
        className
      )}
      {...props}
    />
  )
})
SidebarInput.displayName = "SidebarInput"

const SidebarHeader = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="header"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
})
SidebarHeader.displayName = "SidebarHeader"

const SidebarFooter = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="footer"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
})
SidebarFooter.displayName = "SidebarFooter"

const SidebarSeparator = React.forwardRef<
  React.ElementRef<typeof Separator>,
  React.ComponentProps<typeof Separator>
>(({ className, ...props }, ref) => {
  return (
    <Separator
      ref={ref}
      data-sidebar="separator"
      className={cn("mx-2 w-auto bg-sidebar-border", className)}
      {...props}
    />
  )
})
SidebarSeparator.displayName = "SidebarSeparator"

const SidebarContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="content"
      className={cn(
        "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarContent.displayName = "SidebarContent"

const SidebarGroup = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="group"
      className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
      {...props}
    />
  )
})
SidebarGroup.displayName = "SidebarGroup"

const SidebarGroupLabel = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "div"

  return (
    <Comp
      ref={ref}
      data-sidebar="group-label"
      className={cn(
        "duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
        className
      )}
      {...props}
    />
  )
})
SidebarGroupLabel.displayName = "SidebarGroupLabel"

const SidebarGroupAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      ref={ref}
      data-sidebar="group-action"
      className={cn(
        "absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarGroupAction.displayName = "SidebarGroupAction"

const SidebarGroupContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    data-sidebar="group-content"
    className={cn("w-full text-sm", className)}
    {...props}
  />
))
SidebarGroupContent.displayName = "SidebarGroupContent"

const SidebarMenu = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    data-sidebar="menu"
    className={cn("flex w-full min-w-0 flex-col gap-1", className)}
    {...props}
  />
))
SidebarMenu.displayName = "SidebarMenu"

const SidebarMenuItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ className, ...props }, ref) => (
  <li
    ref={ref}
    data-sidebar="menu-item"
    className={cn("group/menu-item relative", className)}
    {...props}
  />
))
SidebarMenuItem.displayName = "SidebarMenuItem"

const sidebarMenuButtonVariants = cva(
  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
        outline:
          "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
      },
      size: {
        default: "h-8 text-sm",
        sm: "h-7 text-xs",
        lg: "h-12 text-sm group-data-[collapsible=icon]:!p-0",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

const SidebarMenuButton = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean
    isActive?: boolean
    tooltip?: string | React.ComponentProps<typeof TooltipContent>
  } & VariantProps<typeof sidebarMenuButtonVariants>
>(
  (
    {
      asChild = false,
      isActive = false,
      variant = "default",
      size = "default",
      tooltip,
      className,
      ...props
    },
    ref
  ) => {
    const Comp = asChild ? Slot : "button"
    const { isMobile, state } = useSidebar()

    const button = (
      <Comp
        ref={ref}
        data-sidebar="menu-button"
        data-size={size}
        data-active={isActive}
        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
        {...props}
      />
    )

    if (!tooltip) {
      return button
    }

    if (typeof tooltip === "string") {
      tooltip = {
        children: tooltip,
      }
    }

    return (
      <Tooltip>
        <TooltipTrigger asChild>{button}</TooltipTrigger>
        <TooltipContent
          side="right"
          align="center"
          hidden={state !== "collapsed" || isMobile}
          {...tooltip}
        />
      </Tooltip>
    )
  }
)
SidebarMenuButton.displayName = "SidebarMenuButton"

const SidebarMenuAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean
    showOnHover?: boolean
  }
>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-action"
      className={cn(
        "absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        showOnHover &&
          "group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0",
        className
      )}
      {...props}
    />
  )
})
SidebarMenuAction.displayName = "SidebarMenuAction"

const SidebarMenuBadge = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    data-sidebar="menu-badge"
    className={cn(
      "absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none",
      "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
      "peer-data-[size=sm]/menu-button:top-1",
      "peer-data-[size=default]/menu-button:top-1.5",
      "peer-data-[size=lg]/menu-button:top-2.5",
      "group-data-[collapsible=icon]:hidden",
      className
    )}
    {...props}
  />
))
SidebarMenuBadge.displayName = "SidebarMenuBadge"

const SidebarMenuSkeleton = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    showIcon?: boolean
  }
>(({ className, showIcon = false, ...props }, ref) => {
  // Random width between 50 to 90%.
  const width = React.useMemo(() => {
    return `${Math.floor(Math.random() * 40) + 50}%`
  }, [])

  return (
    <div
      ref={ref}
      data-sidebar="menu-skeleton"
      className={cn("rounded-md h-8 flex gap-2 px-2 items-center", className)}
      {...props}
    >
      {showIcon && (
        <Skeleton
          className="size-4 rounded-md"
          data-sidebar="menu-skeleton-icon"
        />
      )}
      <Skeleton
        className="h-4 flex-1 max-w-[--skeleton-width]"
        data-sidebar="menu-skeleton-text"
        style={
          {
            "--skeleton-width": width,
          } as React.CSSProperties
        }
      />
    </div>
  )
})
SidebarMenuSkeleton.displayName = "SidebarMenuSkeleton"

const SidebarMenuSub = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    data-sidebar="menu-sub"
    className={cn(
      "mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5",
      "group-data-[collapsible=icon]:hidden",
      className
    )}
    {...props}
  />
))
SidebarMenuSub.displayName = "SidebarMenuSub"

const SidebarMenuSubItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ ...props }, ref) => <li ref={ref} {...props} />)
SidebarMenuSubItem.displayName = "SidebarMenuSubItem"

const SidebarMenuSubButton = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentProps<"a"> & {
    asChild?: boolean
    size?: "sm" | "md"
    isActive?: boolean
  }
>(({ asChild = false, size = "md", isActive, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-sub-button"
      data-size={size}
      data-active={isActive}
      className={cn(
        "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground",
        "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
        size === "sm" && "text-xs",
        size === "md" && "text-sm",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarMenuSubButton.displayName = "SidebarMenuSubButton"

export {
  Sidebar,
  SidebarContent,
  SidebarFooter,
  SidebarGroup,
  SidebarGroupAction,
  SidebarGroupContent,
  SidebarGroupLabel,
  SidebarHeader,
  SidebarInput,
  SidebarInset,
  SidebarMenu,
  SidebarMenuAction,
  SidebarMenuBadge,
  SidebarMenuButton,
  SidebarMenuItem,
  SidebarMenuSkeleton,
  SidebarMenuSub,
  SidebarMenuSubButton,
  SidebarMenuSubItem,
  SidebarProvider,
  SidebarRail,
  SidebarSeparator,
  SidebarTrigger,
  useSidebar,
}
// END FILE: src/components/ui/sidebar.tsx

// ====================================================================================================

// FILE: src/components/ui/skeleton.tsx
import { cn } from "@/lib/utils"

function Skeleton({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("animate-pulse rounded-md bg-muted", className)}
      {...props}
    />
  )
}

export { Skeleton }
// END FILE: src/components/ui/skeleton.tsx

// ====================================================================================================

// FILE: src/components/ui/slider.tsx
"use client"

import * as React from "react"
import * as SliderPrimitive from "@radix-ui/react-slider"

import { cn } from "@/lib/utils"

const Slider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
>(({ className, ...props }, ref) => (
  <SliderPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex w-full touch-none select-none items-center",
      className
    )}
    {...props}
  >
    <SliderPrimitive.Track className="relative h-2 w-full grow overflow-hidden rounded-full bg-secondary">
      <SliderPrimitive.Range className="absolute h-full bg-primary" />
    </SliderPrimitive.Track>
    <SliderPrimitive.Thumb className="block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" />
  </SliderPrimitive.Root>
))
Slider.displayName = SliderPrimitive.Root.displayName

export { Slider }
// END FILE: src/components/ui/slider.tsx

// ====================================================================================================

// FILE: src/components/ui/switch.tsx
"use client"

import * as React from "react"
import * as SwitchPrimitives from "@radix-ui/react-switch"

import { cn } from "@/lib/utils"

const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
      )}
    />
  </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

export { Switch }
// END FILE: src/components/ui/switch.tsx

// ====================================================================================================

// FILE: src/components/ui/table.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

const Table = React.forwardRef<
  HTMLTableElement,
  React.HTMLAttributes<HTMLTableElement>
>(({ className, ...props }, ref) => (
  <div className="relative w-full overflow-auto">
    <table
      ref={ref}
      className={cn("w-full caption-bottom text-sm", className)}
      {...props}
    />
  </div>
))
Table.displayName = "Table"

const TableHeader = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />
))
TableHeader.displayName = "TableHeader"

const TableBody = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tbody
    ref={ref}
    className={cn("[&_tr:last-child]:border-0", className)}
    {...props}
  />
))
TableBody.displayName = "TableBody"

const TableFooter = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tfoot
    ref={ref}
    className={cn(
      "border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",
      className
    )}
    {...props}
  />
))
TableFooter.displayName = "TableFooter"

const TableRow = React.forwardRef<
  HTMLTableRowElement,
  React.HTMLAttributes<HTMLTableRowElement>
>(({ className, ...props }, ref) => (
  <tr
    ref={ref}
    className={cn(
      "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
      className
    )}
    {...props}
  />
))
TableRow.displayName = "TableRow"

const TableHead = React.forwardRef<
  HTMLTableCellElement,
  React.ThHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <th
    ref={ref}
    className={cn(
      "h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",
      className
    )}
    {...props}
  />
))
TableHead.displayName = "TableHead"

const TableCell = React.forwardRef<
  HTMLTableCellElement,
  React.TdHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <td
    ref={ref}
    className={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)}
    {...props}
  />
))
TableCell.displayName = "TableCell"

const TableCaption = React.forwardRef<
  HTMLTableCaptionElement,
  React.HTMLAttributes<HTMLTableCaptionElement>
>(({ className, ...props }, ref) => (
  <caption
    ref={ref}
    className={cn("mt-4 text-sm text-muted-foreground", className)}
    {...props}
  />
))
TableCaption.displayName = "TableCaption"

export {
  Table,
  TableHeader,
  TableBody,
  TableFooter,
  TableHead,
  TableRow,
  TableCell,
  TableCaption,
}
// END FILE: src/components/ui/table.tsx

// ====================================================================================================

// FILE: src/components/ui/tabs.tsx
"use client"

import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"

import { cn } from "@/lib/utils"

const Tabs = TabsPrimitive.Root

const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List
    ref={ref}
    className={cn(
      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
      className
    )}
    {...props}
  />
))
TabsList.displayName = TabsPrimitive.List.displayName

const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
      className
    )}
    {...props}
  />
))
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName

const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Content
    ref={ref}
    className={cn(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      className
    )}
    {...props}
  />
))
TabsContent.displayName = TabsPrimitive.Content.displayName

export { Tabs, TabsList, TabsTrigger, TabsContent }
// END FILE: src/components/ui/tabs.tsx

// ====================================================================================================

// FILE: src/components/ui/textarea.tsx
import * as React from 'react';

import {cn} from '@/lib/utils';

const Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(
  ({className, ...props}, ref) => {
    return (
      <textarea
        className={cn(
          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',
          className
        )}
        ref={ref}
        {...props}
      />
    );
  }
);
Textarea.displayName = 'Textarea';

export {Textarea};
// END FILE: src/components/ui/textarea.tsx

// ====================================================================================================

// FILE: src/components/ui/toast.tsx
"use client"

import * as React from "react"
import * as ToastPrimitives from "@radix-ui/react-toast"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const ToastProvider = ToastPrimitives.Provider

const ToastViewport = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Viewport>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Viewport
    ref={ref}
    className={cn(
      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
      className
    )}
    {...props}
  />
))
ToastViewport.displayName = ToastPrimitives.Viewport.displayName

const toastVariants = cva(
  "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground",
        destructive:
          "destructive group border-destructive bg-destructive text-destructive-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Toast = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &
    VariantProps<typeof toastVariants>
>(({ className, variant, ...props }, ref) => {
  return (
    <ToastPrimitives.Root
      ref={ref}
      className={cn(toastVariants({ variant }), className)}
      {...props}
    />
  )
})
Toast.displayName = ToastPrimitives.Root.displayName

const ToastAction = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Action>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Action
    ref={ref}
    className={cn(
      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
      className
    )}
    {...props}
  />
))
ToastAction.displayName = ToastPrimitives.Action.displayName

const ToastClose = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Close>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Close
    ref={ref}
    className={cn(
      "absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
      className
    )}
    toast-close=""
    {...props}
  >
    <X className="h-4 w-4" />
  </ToastPrimitives.Close>
))
ToastClose.displayName = ToastPrimitives.Close.displayName

const ToastTitle = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Title>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Title
    ref={ref}
    className={cn("text-sm font-semibold", className)}
    {...props}
  />
))
ToastTitle.displayName = ToastPrimitives.Title.displayName

const ToastDescription = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Description>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Description
    ref={ref}
    className={cn("text-sm opacity-90", className)}
    {...props}
  />
))
ToastDescription.displayName = ToastPrimitives.Description.displayName

type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>

type ToastActionElement = React.ReactElement<typeof ToastAction>

export {
  type ToastProps,
  type ToastActionElement,
  ToastProvider,
  ToastViewport,
  Toast,
  ToastTitle,
  ToastDescription,
  ToastClose,
  ToastAction,
}
// END FILE: src/components/ui/toast.tsx

// ====================================================================================================

// FILE: src/components/ui/toaster.tsx
"use client"

import { useToast } from "@/hooks/use-toast"
import {
  Toast,
  ToastClose,
  ToastDescription,
  ToastProvider,
  ToastTitle,
  ToastViewport,
} from "@/components/ui/toast"

export function Toaster() {
  const { toasts } = useToast()

  return (
    <ToastProvider>
      {toasts.map(function ({ id, title, description, action, ...props }) {
        return (
          <Toast key={id} {...props}>
            <div className="grid gap-1">
              {title && <ToastTitle>{title}</ToastTitle>}
              {description && (
                <ToastDescription>{description}</ToastDescription>
              )}
            </div>
            {action}
            <ToastClose />
          </Toast>
        )
      })}
      <ToastViewport />
    </ToastProvider>
  )
}
// END FILE: src/components/ui/toaster.tsx

// ====================================================================================================

// FILE: src/components/ui/tooltip.tsx
"use client"

import * as React from "react"
import * as TooltipPrimitive from "@radix-ui/react-tooltip"

import { cn } from "@/lib/utils"

const TooltipProvider = TooltipPrimitive.Provider

const Tooltip = TooltipPrimitive.Root

const TooltipTrigger = TooltipPrimitive.Trigger

const TooltipContent = React.forwardRef<
  React.ElementRef<typeof TooltipPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <TooltipPrimitive.Content
    ref={ref}
    sideOffset={sideOffset}
    className={cn(
      "z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    )}
    {...props}
  />
))
TooltipContent.displayName = TooltipPrimitive.Content.displayName

export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }
// END FILE: src/components/ui/tooltip.tsx

// ====================================================================================================

// FILE: src/hooks/use-mobile.tsx
import * as React from "react"

const MOBILE_BREAKPOINT = 768

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    }
    mql.addEventListener("change", onChange)
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    return () => mql.removeEventListener("change", onChange)
  }, [])

  return !!isMobile
}
// END FILE: src/hooks/use-mobile.tsx

// ====================================================================================================

// FILE: src/hooks/use-toast.ts
"use client"

// Inspired by react-hot-toast library
import * as React from "react"

import type {
  ToastActionElement,
  ToastProps,
} from "@/components/ui/toast"

const TOAST_LIMIT = 1
const TOAST_REMOVE_DELAY = 1000000

type ToasterToast = ToastProps & {
  id: string
  title?: React.ReactNode
  description?: React.ReactNode
  action?: ToastActionElement
}

const actionTypes = {
  ADD_TOAST: "ADD_TOAST",
  UPDATE_TOAST: "UPDATE_TOAST",
  DISMISS_TOAST: "DISMISS_TOAST",
  REMOVE_TOAST: "REMOVE_TOAST",
} as const

let count = 0

function genId() {
  count = (count + 1) % Number.MAX_SAFE_INTEGER
  return count.toString()
}

type ActionType = typeof actionTypes

type Action =
  | {
      type: ActionType["ADD_TOAST"]
      toast: ToasterToast
    }
  | {
      type: ActionType["UPDATE_TOAST"]
      toast: Partial<ToasterToast>
    }
  | {
      type: ActionType["DISMISS_TOAST"]
      toastId?: ToasterToast["id"]
    }
  | {
      type: ActionType["REMOVE_TOAST"]
      toastId?: ToasterToast["id"]
    }

interface State {
  toasts: ToasterToast[]
}

const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()

const addToRemoveQueue = (toastId: string) => {
  if (toastTimeouts.has(toastId)) {
    return
  }

  const timeout = setTimeout(() => {
    toastTimeouts.delete(toastId)
    dispatch({
      type: "REMOVE_TOAST",
      toastId: toastId,
    })
  }, TOAST_REMOVE_DELAY)

  toastTimeouts.set(toastId, timeout)
}

export const reducer = (state: State, action: Action): State => {
  switch (action.type) {
    case "ADD_TOAST":
      return {
        ...state,
        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
      }

    case "UPDATE_TOAST":
      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === action.toast.id ? { ...t, ...action.toast } : t
        ),
      }

    case "DISMISS_TOAST": {
      const { toastId } = action

      // ! Side effects ! - This could be extracted into a dismissToast() action,
      // but I'll keep it here for simplicity
      if (toastId) {
        addToRemoveQueue(toastId)
      } else {
        state.toasts.forEach((toast) => {
          addToRemoveQueue(toast.id)
        })
      }

      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === toastId || toastId === undefined
            ? {
                ...t,
                open: false,
              }
            : t
        ),
      }
    }
    case "REMOVE_TOAST":
      if (action.toastId === undefined) {
        return {
          ...state,
          toasts: [],
        }
      }
      return {
        ...state,
        toasts: state.toasts.filter((t) => t.id !== action.toastId),
      }
  }
}

const listeners: Array<(state: State) => void> = []

let memoryState: State = { toasts: [] }

function dispatch(action: Action) {
  memoryState = reducer(memoryState, action)
  listeners.forEach((listener) => {
    listener(memoryState)
  })
}

type Toast = Omit<ToasterToast, "id">

function toast({ ...props }: Toast) {
  const id = genId()

  const update = (props: ToasterToast) =>
    dispatch({
      type: "UPDATE_TOAST",
      toast: { ...props, id },
    })
  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })

  dispatch({
    type: "ADD_TOAST",
    toast: {
      ...props,
      id,
      open: true,
      onOpenChange: (open) => {
        if (!open) dismiss()
      },
    },
  })

  return {
    id: id,
    dismiss,
    update,
  }
}

function useToast() {
  const [state, setState] = React.useState<State>(memoryState)

  React.useEffect(() => {
    listeners.push(setState)
    return () => {
      const index = listeners.indexOf(setState)
      if (index > -1) {
        listeners.splice(index, 1)
      }
    }
  }, [state])

  return {
    ...state,
    toast,
    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
  }
}

export { useToast, toast }
// END FILE: src/hooks/use-toast.ts

// ====================================================================================================

// FILE: src/lib/utils.ts
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
// END FILE: src/lib/utils.ts

// ====================================================================================================

// FILE: tailwind.config.ts
import type {Config} from 'tailwindcss';

export default {
  darkMode: ['class'],
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      fontFamily: {
        body: ['Poppins', 'sans-serif'],
        headline: ['Poppins', 'sans-serif'],
        code: ['monospace'],
      },
      colors: {
        background: 'hsl(var(--background))',
        foreground: 'hsl(var(--foreground))',
        card: {
          DEFAULT: 'hsl(var(--card))',
          foreground: 'hsl(var(--card-foreground))',
        },
        popover: {
          DEFAULT: 'hsl(var(--popover))',
          foreground: 'hsl(var(--popover-foreground))',
        },
        primary: {
          DEFAULT: 'hsl(var(--primary))',
          foreground: 'hsl(var(--primary-foreground))',
        },
        secondary: {
          DEFAULT: 'hsl(var(--secondary))',
          foreground: 'hsl(var(--secondary-foreground))',
        },
        muted: {
          DEFAULT: 'hsl(var(--muted))',
          foreground: 'hsl(var(--muted-foreground))',
        },
        accent: {
          DEFAULT: 'hsl(var(--accent))',
          foreground: 'hsl(var(--accent-foreground))',
        },
        destructive: {
          DEFAULT: 'hsl(var(--destructive))',
          foreground: 'hsl(var(--destructive-foreground))',
        },
        border: 'hsl(var(--border))',
        input: 'hsl(var(--input))',
        ring: 'hsl(var(--ring))',
        chart: {
          '1': 'hsl(var(--chart-1))',
          '2': 'hsl(var(--chart-2))',
          '3': 'hsl(var(--chart-3))',
          '4': 'hsl(var(--chart-4))',
          '5': 'hsl(var(--chart-5))',
        },
        sidebar: {
          DEFAULT: 'hsl(var(--sidebar-background))',
          foreground: 'hsl(var(--sidebar-foreground))',
          primary: 'hsl(var(--sidebar-primary))',
          'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',
          accent: 'hsl(var(--sidebar-accent))',
          'accent-foreground': 'hsl(var(--sidebar-accent-foreground))',
          border: 'hsl(var(--sidebar-border))',
          ring: 'hsl(var(--sidebar-ring))',
        },
      },
      borderRadius: {
        lg: 'var(--radius)',
        md: 'calc(var(--radius) - 2px)',
        sm: 'calc(var(--radius) - 4px)',
      },
      keyframes: {
        'accordion-down': {
          from: {
            height: '0',
          },
          to: {
            height: 'var(--radix-accordion-content-height)',
          },
        },
        'accordion-up': {
          from: {
            height: 'var(--radix-accordion-content-height)',
          },
          to: {
            height: '0',
          },
        },
      },
      animation: {
        'accordion-down': 'accordion-down 0.2s ease-out',
        'accordion-up': 'accordion-up 0.2s ease-out',
      },
    },
  },
  plugins: [require('tailwindcss-animate')],
} satisfies Config;
// END FILE: tailwind.config.ts

// ====================================================================================================

// FILE: tsconfig.json
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
// END FILE: tsconfig.json
